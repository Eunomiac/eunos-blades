& {
	min-width: 775px;
	min-height: 800px;

	section.sheet-top {
		min-height: 200px;
		grid-template-areas:
			". . title title title title title title playbook playbook playbook"
			". . . subtitle subtitle subtitle subtitle subtitle subtitle . ."
			". heritage heritage background background vice vice crew crew coins coins"
			"stash stash stash stash stash stash stash stash stash stash stash";

		.sheet-title { --sheet-title-font-size: #{toRem(58px)} }
		.sheet-subtitle { --sheet-subtitle-font-size: #{toRem(32px)} }

		.comp-playbook { grid-area: playbook }
		.comp-heritage { grid-area: heritage }
		.comp-background { grid-area: background }
		.comp-vice { grid-area: vice }
		.comp-crew { grid-area: crew }
		.comp-coins { grid-area: coins }

		.comp-stash { grid-area: stash;
			--dotline-dot-spacing: 3px; }
	}

	section.sheet-mid-bar {

		.comp-stress {
			.dotline {
				--fill-color-full: var(--blades-red-dark);
				--half-color-full: var(--blades-red-bright);
			}
		}

		.comp-trauma {
			.dotline {
				--fill-color-full: var(--blades-red-bright);
			}
		}

		.comp-trauma-conditions {
			min-width: toRem(300px);
			margin-right: toRem(4px);
		}
	}

	section.harm-armor {
		margin-top: -2px;
		padding: 0 var(--content-padding);
		> table {
			> tbody {
				> tr {
					height: toRem(35px);

					&:nth-child(2n) {
						background: var(--blades-black-fade);
						.harm-effect {
							text-align: center;
							font-size: toRem(16px);
						}
					}

					.harm-level {
						width: toRem(35px);
						font-family: var(--font-emphasis);
						font-size: toRem(28px);
						line-height: toRem(35px);
						text-align: center;
						color: var(--blades-white-bright);
					}

					.harm-input {
						input[type="text"] {
							font-family: var(--font-decorative);
							font-style: italic;
							font-size: toRem(18px);
							text-align: center;
						}
					}

					.harm-effect {
						color: var(--blades-white-bright);
						text-align: right;
					}

					.healing-clock {
						padding: 0 toRem(10px);
						width: 120px;
						--clock-frame-size: 80px;
						--clock-glow-size: calc(var(--clock-frame-size) * 3);
						--clock-glow-correction: -80px;
					}

					.armor-uses {
						padding: 0 toRem(10px);
						width: 100px;
						.comp-armor {
							position: relative;
							height: 100px;
							width: 100px;
							pointer-events: none;

							.main-armor-control,
							.special-armor-control {
								position: absolute;
								pointer-events: auto;

								&.main-armor-control {
									z-index: 1;

									height: 100%;
									width: 100%;
									top: 0px;
									left: 0px;
								}

								&.special-armor-control {
									z-index: 2;

									height: 50%;
									width: 50%;
									right: 0px;
									bottom: 0px;
								}
							}

							.main-armor-control + .special-armor-control {
								display: none;
							}

							.svg-armor {
								position: absolute;
								height: 100px;
								width: 100px;
								top: 0;
								left: 0;
								transition: 0.5s;

								svg {
									height: 100%;
									width: auto;
								}

								fill: var(--blades-black);
								stroke: var(--blades-white);
								// stroke: transparent !important;
								stroke-width: 8px;
								stroke-linejoin: bevel;
								stroke-miterlimit: 10;


								&.hover-over {
									filter: blur(0px) brightness(1.5);
									opacity: 1;
									&:not(.checked) {
										transform: scale(1.2);
									}
								}

								&.checked {
									fill: none;
									stroke: var(--blades-grey-bright);
									opacity: 0.5;
									filter: blur(1px);
								}

								&.armor-light {
									transform: scale(1.1);

									&.hover-over:not(.checked) {
										transform: scale(1.4);
									}
								}

								&.armor-special {
									height: 75px;
									width: auto;
									top: 12.5px;
									left: 12.5px;
									stroke: none;

									.specialBg {
										fill: var(--blades-black);
									}
									.special {
										fill: var(--blades-white);
									}

									&.checked {
										.specialBg {
											fill: var(--blades-grey-dark);
										}
										.special {
											fill: var(--blades-grey-bright);
										}
									}
								}
							}

							.svg-armor.armor-heavy:not(.checked) + .svg-armor.armor-light {
								display: none;
							}

							.svg-armor ~ .svg-armor.armor-special {
								height: 50px;
								width: auto;
								top: unset;
								left: unset;
								right: -10px;
								bottom: 0;
							}
						}
					}
				}
			}
		}
	}

	div.split-panel {
		display: grid;
		grid-template-columns: 1fr 200px;
		align-items: start;
		overflow: hidden;

		section.nav-group {
			.loadout {
				.tab-label {
					// padding-right: toRem(10px);
					// width: 100%;

					.load-selector {
						// height: 100%;
						width: toRem(150px);
						margin: 0 toRem(10px);
						// margin-left: toRem(10px);
						font-family: var(--font-emphasis);
						text-transform: uppercase;
						text-indent: toRem(3px);
					}

					.load-selected-count span {
						color: var(--blades-white-bright);
						font-weight: bold;
						font-size: toRem(24px);
						line-height: inherit;
						position: relative;
						top: 2px;
						margin: 0 2px;

					}
					// .load-selected-count span { font-weight: bold; line-height: 16.8px; }

					.load-level {
						// position: absolute;
						flex-grow: 1;
						// right: toRem(35px);
						// font-family: var(--font-emphasis);
						// text-transform: uppercase;
						text-align: right;
						padding-right: toRem(5px);
						// justify-self: flex-end;
					}
					.load-amount {
						--number-circle-size: #{toRem(24px)};
						filter: brightness(1.5);
						margin: 0 #{toRem(2px)} 0 #{toRem(5px)};
						// position: absolute;
						// transform: translate(-50%, -50%);
						// right: calc(-1 * var(--number-circle-size) + 50%);
						// top: 50%;
					}
				}

				.comp .dotline {
					// position: absolute;
					// left: calc(-0.65 * var(--content-padding));
					// top: calc(0.3 * var(--content-padding));
					// flex-direction: row;
					// align-self: flex-start;
					// right: -25px;
					// top: unset;
					// bottom: -2px;
					left: unset;
					transform: none;

					.dot {
						// margin-top: toRem(4px);
						// margin-right: toRem(3px);
					}

					+ .comp-title .item-title {
						margin-left: toRem(12px);
					}
				}
			}
		}

		section.action-ratings {
			align-items: stretch;
			// flex-grow: 1;

			.comp-attribute {
				background: var(--blades-white);
				margin-bottom: toRem(5px);
				max-height: toRem(26px);

				.clock-container {
					padding: 0;
					width: 30px;
					height: 26px;
					--clock-frame-size: 24px;
					--clock-glow-size: calc(var(--clock-frame-size) * 3);
					--clock-glow-correction: -164px;

					.clock-frame .segmented {
						stroke: var(--blades-black-dark);
					}
					.clock-interior circle {
						fill: var(--blades-black);
					}
				}

				label {
					color: var(--blades-black);
					font-size: toRem(16px);
					font-family: var(--font-emphasis);
					text-shadow: none;
					// padding: 0;
					line-height: toRem(26px);
					text-transform: uppercase;
					text-align: left;
					text-indent: toRem(5px);
					margin-bottom: toRem(5px);
				}

				.comp-body {
					justify-content: flex-end;
					align-items: flex-start;
					position: relative;
					// left: toRem(2px);
					max-height: toRem(26px);
					.dotline {
						position: relative;
						right: 0;
						left: unset;
						// top: -50%;
						justify-content: flex-end;

						--dotline-dot-sizeX: #{toRem(11px)};
						--dotline-dot-spacing: #{toRem(1px)};

						--frame-color: var(--blades-black);
						// --frame-color-full: var(--blades-grey);
						--fill-color-full: var(--blades-gold-bright);
						--fill-color-empty: rgba(0, 0, 0, 0.25);
						--half-color-empty: var(--blades-gold-dark);


						.dot {
							transform-origin: top;
							transition: 0.25s;
							transform: scaleY(1);

							&.empty-dot {
								transform: scaleY(0.7);
							}
						}
					}
				}

				&:not(:first-child) {
					margin-top: toRem(5px);
				}
			}

			.comp-action {
				padding: #{toRem(1.5px)} #{toRem(20px)} #{toRem(1.5px)} #{toRem(10px)};

				label {
					text-align: left;
					flex-grow: 1;
					margin-left: toRem(20px);
					font-size: toRem(16px);
					line-height: 1.2;
				}
				.comp-body {
					justify-content: flex-end;
					flex-grow: 0;

					.dotline {
						--dotline-dot-spacing: #{toRem(2px)};

						.img-main, .img-hover {
							filter: drop-shadow(0px 0px 1px var(--blades-grey-dark))
						}

						.dot:first-child {
							height: 18px;
							border-right: 1px dotted var(--blades-white);
							margin-right: toRem(2.5px);
							padding-right: toRem(2.5px);
							width: 17.5px;
						}

						.dot:nth-child(2) {
							margin-left: toRem(2.5px);
						}
					}
				}
			}

			/* don't use ANY of other styles: start from scratch and build visually.

			use radial gradient instead of background for debugging */
		}
	}
}