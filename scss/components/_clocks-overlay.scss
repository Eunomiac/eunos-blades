$key-sizes: (
  1: (height: 455px, width: 202px, labelTop: 150px, inactiveKeyTop: -350px, inactiveLabelLeft: -40px, inactiveLabelBottom: 50px),
  2: (height: 624.438px, width: 202px, labelTop: 400px, inactiveKeyTop: -520px, inactiveLabelLeft: -40px, inactiveLabelBottom: 50px),
  3: (height: 915px, width: 280px, labelTop: 600px, inactiveKeyTop: -815px, inactiveLabelLeft: -10px, inactiveLabelBottom: 50px),
  4: (height: 1140px, width: 376px, labelTop: 700px, inactiveKeyTop: -925px, inactiveLabelLeft: 40px, inactiveLabelBottom: 150px),
  5: (height: 1140px, width: 376px, labelTop: 800px, inactiveKeyTop: -1025px, inactiveLabelLeft: 40px, inactiveLabelBottom: 50px),
  6: (height: 1150px, width: 376px, labelTop: 900px, inactiveKeyTop: -1025px, inactiveLabelLeft: 40px, inactiveLabelBottom: 50px)
);
$clock-positions: (
  1: (
    1: (x: 101px, y: 99px)
  ),
  2: (
    1: (x: 101px, y: 99px),
    2: (x: 101px, y: 279px)
  ),
  3: (
    1: (x: 140px, y: 99px),
    2: (x: 74px, y: 211px),
    3: (x: 206px, y: 211px)
  ),
  4: (
    1: (x: 188px, y: 99px),
    2: (x: 101px, y: 185px),
    3: (x: 275px, y: 185px),
    4: (x: 188px, y: 273px)
  ),
  5: (
    1: (x: 188px, y: 99px),
    2: (x: 101px, y: 185px),
    3: (x: 275px, y: 185px),
    4: (x: 188px, y: 273px),
    5: (x: 188px, y: 452px)
  ),
  6: (
    1: (x: 188px, y: 99px),
    2: (x: 101px, y: 185px),
    3: (x: 275px, y: 185px),
    4: (x: 188px, y: 273px),
    5: (x: 188px, y: 452px),
    6: (x: 188px, y: 683px)
  )
);

$label-positions: (
  1: (
    1: (x: 0, y: 0px, align: center, width: 100%),
  ),
  2: (
    1: (x: 0, y: 0px, align: center, width: 100%),
    2: (x: 0, y: 325px, align: center, width: 100%),
  ),
  3: (
    1: (x: 0, y: 0px, align: center, width: 100%),
    2: (x: -20px, y: 110px, align: right, width: 50%),
    3: (x: 220px, y: 265px, align: left, width: 50%),
  ),
  4: (
    1: (x: 0, y: 0px, align: center, width: 100%),
    2: (x: -60px, y: 80px, align: right, width: 50%),
    3: (x: 340px, y: 230px, align: left, width: 50%),
    4: (x: 0, y: 320px, align: center, width: 100%)
  ),
  5: (
    1: (x: 0, y: 0px, align: center, width: 100%),
    2: (x: -60px, y: 80px, align: right, width: 50%),
    3: (x: 340px, y: 230px, align: left, width: 50%),
    4: (x: 0, y: 320px, align: center, width: 100%),
    5: (x: 0, y: 500px, align: center, width: 100%),
  ),
  6: (
    1: (x: 0, y: 0px, align: center, width: 100%),
    2: (x: -60px, y: 80px, align: right, width: 50%),
    3: (x: 340px, y: 230px, align: left, width: 50%),
    4: (x: 0, y: 320px, align: center, width: 100%),
    5: (x: 0, y: 500px, align: center, width: 100%),
    6: (x: 0, y: 730px, align: center, width: 100%),
  )
);

& {

  &, & * {
  --top-shift: 50px;
  --left-shift: 75px;
  --key-scale: 0.33;
  --alternating-top-shift: 120px;
  --clock-frame-size: 108px;
  --clock-glow-size: calc(var(--clock-frame-size) * 3);
  --clock-glow-correction: -37px;
  }

  display: flex;
  flex-direction: row;
  flex-wrap: wrap;
  justify-content: flex-start;
  align-items: flex-start;

  transform-origin: 0 0;
  transform: scale(var(--key-scale));

  position: absolute !important;
  width: calc((100% / var(--key-scale)) - var(--left-shift));
  height: calc((100% / var(--key-scale)) - var(--top-shift));
  top: var(--top-shift);
  left: var(--left-shift);
  pointer-events: none;
  z-index: 50;

  svg, svg defs {
    * { transform-origin: 50% 50% }

    .segmented {
      --rotation-step-size: calc(360deg / var(--rotation-steps));
      --segment-scale: 1;
    }
    clipPath.segmented { --segment-scale: 2 }

    @each $clockSize in (1, 2, 3, 4, 5, 6, 8, 10, 12) {
      .segmented[data-size="#{$clockSize}"] { --rotation-steps: #{$clockSize} }
    }

    .segmented > use {
      transform: scale(var(--segment-scale)) rotate(var(--segment-rotation));

      @for $i from 1 through 12 {
        &:nth-child(#{$i}) { --segment-rotation: calc(#{$i - 1} * var(--rotation-step-size)) }
      }
    }
  }

  svg, .clock, img { position: absolute }

  .clock-key {
    position: relative;
    margin: 0 20px;
    height: var(--key-height);
    width: var(--key-width);


    & > * { position: absolute }

    .key-label {
      font-family: var(--font-decorative);
      font-size: toRem(64px);
      top: unset;
      z-index: 20;
      width: 100%;
      pointer-events: all;
      color: var(--blades-white-bright);
      text-shadow:
        0 0 15px var(--blades-black-dark),
        0 0 15px var(--blades-black-dark),
        0 0 15px var(--blades-black-dark),
        0 0 15px var(--blades-black-dark);
      // white-space: nowrap;
      // rotate: -30deg;
      left: 0;

      &:hover {
        color: var(--blades-gold-bright) !important;
      }
    }

    &:not(.active-key) {
      .key-label {
        color: var(--blades-white);
        font-family: Oswald, sans-serif;
        font-size: toRem(40px);
        top: unset;
        width: 200px;
        rotate: 30deg;
        text-align: left;
        white-space: nowrap;
      }
      .clock-label-container { display: none }
      .clock-image-container {
        // .key-image { filter: drop-shadow(30px 30px 10px var(--blades-black-dark)) sepia(2) hue-rotate(130deg)  }
      } .clock { display: none }
    }

    .clock-label-container {
      height: var(--key-height);
      width: calc(1.5 * var(--key-width));
      left: calc(-0.25 * var(--key-width));
      pointer-events: none;
      z-index: 5;

      .clock-label {
        position: absolute;
        // width: 100%;
        .short-label {
          font-size: toRem(40px);
          font-family: Oswald, sans-serif;
          text-shadow:
            0 0 15px var(--blades-black-dark),
            0 0 15px var(--blades-black-dark),
            0 0 15px var(--blades-black-dark),
            0 0 15px var(--blades-black-dark);
        }
        &.clock-active .short-label {
          color: var(--blades-white-bright);
        }
      }
    }

    .clock-image-container {
      height: var(--key-height);
      width: var(--key-width);

      .key-image {
        height: var(--key-height);
        width: var(--key-width);
        z-index: 1;
        overflow: visible;
        filter:
          drop-shadow(0px 0px 10px var(--blades-white-bright))
          drop-shadow(30px 30px 10px var(--blades-black-dark))
          brightness(0.5);


        .key-bg {
          fill: var(--blades-black);
        }

        .metallic-overlay {
          height: var(--key-height);
          width: var(--key-width);
          filter: url(#metallicFilter) blur(1px);
          fill: var(--blades-grey-dark);
        }
      }
      @import "./clocks";

      .clock { position: absolute !important;}
    }

    @each $key, $clocks in $clock-positions {
      &[data-size="#{$key}"] {
        --key-height: #{map-get(map-get($key-sizes, $key), "height")};
        --key-width: #{map-get(map-get($key-sizes, $key), "width")};
        .key-label {
          top: map-get(map-get($key-sizes, $key), "labelTop");
        }
        @each $clock, $pos in $clocks {
          .clock:nth-of-type(#{$clock}) {
            left: map-get($pos, "x");
            top: map-get($pos, "y");
          }
        }

        &:not(.active-key) {
          --key-width: 170px;
          top: map-get(map-get($key-sizes, $key), "inactiveKeyTop");
          .key-label {
            left: map-get(map-get($key-sizes, $key), "inactiveLabelLeft");
            top: unset !important;
            bottom: #{map-get(map-get($key-sizes, $key), "inactiveLabelBottom")} !important;
          }
          // top: unset;
          // bottom: 90%;
          // position: absolute;
          // rotate: -90deg;
          // scale: 0.33;
          // left: unset;
          // right: 0;
        }
      }
    }

    @each $key, $labels in $label-positions {
      &[data-size="#{$key}"] {
        @each $label, $pos in $labels {
          .clock-label[data-clock-num="#{$label}"] {
            left: map-get($pos, "x");
            top: map-get($pos, "y");
            text-align: map-get($pos, "align");
            width: map-get($pos, "width");
          }
        }
      }
    }

    &:nth-child(2n+1) { top: var(--alternating-top-shift) }
  }
}