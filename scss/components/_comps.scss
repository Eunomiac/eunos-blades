.comp {
  display: flex;
  flex-wrap: nowrap;
  position: relative;
  justify-content: flex-start;
  align-items: center;
  z-index: zLevel();

  &:hover { z-index: 10 }

  &.full-width { width: 100%; justify-content: space-evenly }

  .comp-control, .comp-title, .portrait-block.comp-body { transition: 0.25s; pointer-events: auto; cursor: pointer }

  .comp-label:hover, .comp-title:hover {
    z-index: zLevel(+3) !important;

    &.comp-label a {color: var(--blades-gold-bright)}
    &.comp-title {color: var(--blades-white-bright)}
  }

  .comp-label {
    color: var(--blades-white-bright);
    font-size: toRem(12px);
    line-height: toRem(12px);
    z-index: zLevel(+3);
    flex-grow: 0.5;

    &.comp-prompt {
      font-size: toRem(16px);
      line-height: 1.1;
      font-family: var(--font-emphasis);
      color: var(--blades-gold);
      text-transform: uppercase;
      text-align: center;

      // &, * { transition: 0.25s }

      .sur-title {
        display: block;
        font-size: toRem(14px);
        text-transform: lowercase;
        font-variant: small-caps;
        text-shadow: none;
        text-align: center;
        margin-top: 10px;
      }

      .main-title {
        display: block;
        color: var(--blades-white);
        text-align: center;
      }

    }

  }


  .comp-control {
    z-index: zLevel(+3);
    // transition: 0.25s;
    padding: 0;
    font-weight: bold;

    color: var(--comp-control-color);
    text-shadow: 0 0 #{toRem(3px)} var(--comp-control-shadow-color);
    &:hover { transform: scale(1.5) }
    display: block;

    // &:hover > * { opacity: 1; scale: 1.25 1.25; }

    &.comp-button {
      opacity: 0.5;
      text-align: center;

      &.comp-delete, &.comp-delete-full, &.comp-delete-clock {
        --comp-control-color: var(--blades-white-bright);
        --comp-control-hover-color: var(--blades-red-bright);
        --comp-control-shadow-color: transparent;
        --comp-control-hover-shadow-color: var(--blades-black-dark);

        position: absolute;
      }

      &.comp-add, &.comp-add-clock {
        --comp-control-color: var(--blades-black-dark);
        --comp-control-hover-color: var(--blades-white-bright);
        --comp-control-shadow-color: var(--blades-grey);
        --comp-control-hover-shadow-color: var(--blades-black-dark);

        // position: absolute;
        // left: toRem(4px);
        // transform: translate(0, -50%);
        // top: 45%;

        margin-left: toRem(10px);

        i { line-height: toRem(24px) }


        // + span { margin-left: 20px }
      }

      &:hover {
        opacity: 1;
        color: var(--comp-control-hover-color);
        text-shadow: 0 0 #{toRem(3px)} var(--comp-control-hover-shadow-color);
      }
    }
  }

  .comp-body {
    display: flex;
    justify-content: center;
    align-items: center;
    flex-grow: 1;
    position: relative;

    .comp-title {z-index: zLevel()}

    h1, h2, h3, h4, p, blockquote, table { margin: 0; padding: 0; }
  }

  .comp-toggle {
    font-family: var(--font-emphasis);
    text-transform: uppercase;
    font-size: toRem(16px);
    line-height: toRem(20px);

    &.comp-toggle-red {
      color: var(--blades-red-bright);
      font-weight: bold;
      text-shadow: var(--text-shadow-dark);
      scale: 0.9;

      &:hover { z-index: 10; color: var(--blades-red) }
    }

    &.comp-toggle-grey {
      color: var(--blades-grey);
      filter: blur(2px);
      scale: 0.8;

      &:hover { z-index: 10; filter: blur(0px); color: var(--blades-white) }
    }
  }

  .number-circle {
    --number-circle-size: #{toRem(20px)};
    // position: absolute;

    &.item-load {
      // bottom: toRem(-5px);
      // right: toRem(-15px);
    }
  }

  .comp-number-input {
    font-family: var(--font-emphasis);
    color: var(--blades-white-bright);
    width: toRem(32px);
    text-align: center;
  }

  .comp-status-toggle {
    position: absolute;
    text-shadow: 0 0 2px var(--blades-black-dark),0 0 2px var(--blades-black-dark),0 0 2px var(--blades-black-dark),0 0 2px var(--blades-black-dark);
    scale: 1.5;
    top: -10px;
    right: 15px;

    > * { transition: 0.5s }

    .status-positive {
      color: var(--blades-green-bright);
    }
    .status-negative {
      margin-top: -5px;
      margin-bottom: 5px;
      color: var(--blades-red-bright);
    }
    .status-neutral {
      color: var(--blades-grey);
      opacity: 0.8;
    }

    &:hover {
      filter: brightness(1.5);
      scale: 1.75;

      .status-neutral {
        opacity: 1;
      }
    }
  }
}


.comp.portrait-container {
  flex-wrap: wrap;
  width: 100%;
}

.comp.comp-labeled-input {
  gap: 5px;
  margin-right: 5px;
}

.comp.comp-vertical {
  --comp-img-scale: 2;
  --comp-name-size: #{toRem(16px)};
  flex-direction: column;
  // min-height: toRem(60px);
  // max-height: toRem(60px);
  pointer-events: auto;
  // flex-basis: toRem(30px);

  --main-title-color: #AAA;
  .comp-button.comp-delete { left: 75%; top: 0%; }

  // &, * { transition: 0.15s }

  // &:not(.comp-playbook):not(.comp-coins):hover {
  //   --main-title-color: #FFF;
  //   color
  //   scale: 1.15;

  // }

  > .comp-label {
    text-align: center;

    &.comp-prompt {
      height: toRem(12px);
      margin-top: toRem(-10px);
    }
  }

  .comp-title {
    text-align: center;
    font-family: var(--font-emphasis);
    // z-index: 2;
    font-size: var(--comp-name-size);
    text-transform: uppercase;
    // height: 100%;
    padding-top: 0px;
  }

  .comp-body {
    display: flex;
    flex-direction: column;
    min-height: toRem(48px);
    width: 100%;

    > img {
      position: absolute;
      transform:
        translate(-50%, -50%)
        scaleX(var(--comp-img-scaleX, var(--comp-img-scale)))
        scaleY(var(--comp-img-scaleY, var(--comp-img-scale)));
      opacity: 0.5;
      filter: blur(0.5px);
      top: 50%;
      left: 50%;
      height: 100%;
      z-index: zLevel(-2);
      pointer-events: none;
    }

    .comp-body-text { display: none }
  }

  &.portrait-block {
    height: 80px;
    flex-basis: toRem(80px);
    min-width: 90px;
    margin: 10px 0;

    .comp-label.shadowed {
      margin-top: -10px;
      margin-bottom: 10px;
    }

    .comp-button.comp-delete { left: 5px; right: unset; top: 62px }

    .comp-body {
      filter: drop-shadow(0 0 #{toRem(2px)} var(--blades-black-dark));
      width: 100%;

      .comp-title {
        position: absolute;
        top: 80%;
        // bottom: 0px;
        left: 50%;
        transform: translate(-50%, -50%) scale(70%);
        color: var(--blades-grey);

        &:hover {
          transform: translate(-50%, -50%) scale(100%);
          color: var(--blades-white-bright);
        }
      }

      .comp-img {
        --comp-img-scale: 1.5;
        height: 100%;
        opacity: 1;
        filter: none;
        clip-path: ellipse(50% 50% at 50% 50%);
        z-index: 1;
        position: absolute;
        top: -5px;
      }
    }
  }

  &.comp-playbook {
    --comp-img-scaleX: -2;
    --comp-img-scaleY: 2;
    --comp-name-size: #{toRem(42px)};
    position: relative;
    top: toRem(20px);
    margin-bottom: toRem(-68px);
    z-index: zLevel(-2);

    .comp-button.comp-delete { left: unset; right: toRem(5px); top: -10px; }

    .comp-label:not(.comp-prompt) .comp-control.comp-add { display: none }

    .comp-body {
      img {
        height: toRem(120px);
        width: auto;
        opacity: 1;
        filter: blur(1px);
        position: absolute;
      }
      .comp-title {
        width: 100%;
        height: 100%;
        font-family: var(--font-emphasis-alt);
        color: var(--blades-white-bright);
        text-shadow: 1px 1px 0px var(--blades-grey-bright), -1px -1px 0px var(--blades-black);
        font-size: toRem(70px);
        text-transform: lowercase;
        text-align: right;
        padding-right: toRem(4px);
        margin-bottom: toRem(45px);
        margin-top: toRem(15px);
      }
    }
  }

}

.comp.comp-horizontal {
  flex-direction: row;
  justify-content: flex-start;
  align-items: flex-start;


  .comp-button.comp-delete { left: toRem(5px); top: unset; bottom: 0 }

  > .comp-label {
    text-align: right;
    font-size: toRem(14px);
    line-height: toRem(18px);
    margin: 0;

    &.comp-input-label {
      line-height: toRem(26px);
      margin: 0 5px 0 10px;
    }
  }

  .comp-body {
    justify-content: flex-start;
    align-items: flex-start;
  }

  &.comp-desc-trait {
    align-items: flex-start;
    padding: toRem(5px) 0;

    &:first-of-type { margin-top: toRem(-5px); }

    &:not(:first-of-type) { border-top: 1px solid var(--blades-white); }

    .comp-label {
      min-width: 20px;
      max-width: 20px;
      min-height: 20px;
      max-height: 20px;
      margin-top: -5px;
      margin-left: 3px;
      margin-right: -20px;
      z-index: 15;
    }

    .comp-body {
      min-height: toRem(50px);

      .comp-img {
        position: absolute;
        height: 50px;
        transform: translate(-50%, -50%);
        top: 50%;
        left: toRem(50px);
        filter: blur(1px);
        opacity: 0.5;
      }

      .comp-title {
        position: relative;
        width: toRem(100px);
        flex-shrink: 0;
        flex-grow: 0;
        min-height: toRem(40px);
        align-self: flex-start;
        color: var(--blades-white-bright);

        display: flex;
        flex-direction: column;
        justify-content: flex-start;
        align-items: center;

        font-family: var(--font-emphasis);
        font-size: toRem(14px);
        padding: 0 toRem(7px);
        text-align: center;
        z-index: 1;
        line-height: var(--line-height-default);
      }

      .dotline {
        position: relative;
        transform: translate(-50%, 0);
        left: 50%;
        bottom: 0;

        .dotline-label {
          margin-right: 5px;
          font-weight: bold;
        }
      }

      .comp-body-text {
        font-family: var(--font-primary-small-narrow);
        hyphens: auto;
        text-align: justify;
        padding: 0 toRem(5px) 0 0;
        line-height: var(--line-height-compact);
        flex-grow: 1;

        p:not(:last-of-type) { margin-bottom: 6px }
      }
    }
  }
}

.comp.comp-teeth {
  &.comp-horizontal {
    .dotline {
      padding-left: toRem(4px);
      --dotline-dot-sizeX: #{toRem(18px)};
      --dotline-dot-spacing: #{toRem(4px)};

      .dot { flex-shrink: 1 }
    }

    &.comp-xp {
      z-index: zLevel(+1);

      .comp-label { flex-grow: 1}

      .comp-body {
        justify-content: flex-end;

        .dotline {
          --dotline-dot-spacing: #{toRem(2px)};
          --dotline-horiz-align: flex-end;

          --frame-color: var(--blades-black);
          --fill-color-full: var(--blades-gold-bright);
          --fill-color-empty: rgba(0, 0, 0);
          --half-color-empty: var(--blades-gold-dark);
        }
      }

      &.comp-xp-playbook {
        position: absolute;
        right: 0;

        .dotline {
          --dotline-dot-sizeX: #{toRem(18px)};

          .dot {
            transform-origin: top;
            transition: 0.25s;
            transform: scaleY(1);

            &.empty-dot {
              transform: scaleY(0.5);
            }
          }
        }
      }
    }

  }

  &.comp-vertical {
    justify-content: flex-start;
    align-items: center;
    height: 100%;
    margin: 0;
    flex-grow: 0.5;

    .comp-body{ top: toRem(-5px) }

    .dotline-label {
      min-width: toRem(90px);
      text-align: center;
      margin-left: toRem(20px);
    }

    .dotline {
      flex-grow: 1;
      justify-content: center;
      margin-top: -50%;
      margin-bottom: -50%;
      --dotline-dot-sizeX: #{toRem(16px)};
      --dotline-dot-spacing: #{toRem(4px)};
    }
  }
}

.comp.comp-coins, .comp.comp-stash {
  margin-bottom: 4px;
  pointer-events: none;

  &.comp-coins {
    margin: 0px;
    justify-content: space-evenly;

    .comp-body { flex-shrink: 0.5; min-height: unset; margin-top: 5px;}
  }
  .dotline {
    --dotline-dot-size: #{toRem(18px)};
    --dotline-dot-spacing: -2px;

    .dot.empty-dot {
      filter: saturate(0);
      opacity: 0.5;
    }
    .dot.full-dot {
      filter: brightness(0.8) saturate(0.75);
    }
  }
  &.comp-coins .dot:nth-of-type(4n) + .dot {
    margin-left: toRem(5px);
  }
  &.comp-stash .dot:nth-of-type(10n) + .dot {
    margin-left: toRem(10px);
  }
}

.comp.comp-tier {
  height: 100%;
  min-width: 120px;
  align-items: stretch;
  grid-area: tier;

  > .full-width.flex-horizontal { align-items: flex-start }

  .tier-bonus-container {
    flex-grow: 1;

    .filled-label {
      height: 30px;
      min-width: 100%;
    }

    .dotline {
      height: 30px;
      width: 100%;

      .dot.empty-dot ~ .dot.empty-dot { display: none }
    }

    &.hidden-empty-dots .dotline .dot.empty-dot { display: none !important }
  }

  .tier-total-container {
    position: absolute;
    right: 0;
    top: -5px;
    min-width: 80px;
    text-align: center;
    font-size: 100px;
    line-height: 60px;
    scale: 0.5 1;
    pointer-events: none;
    transform-origin: 100% 50%;
    color: var(--blades-gold-bright);
    text-shadow:
      0 0 5px var(--blades-black-dark),
      0 0 5px var(--blades-black-dark),
      0 0 5px var(--blades-black-dark),
      0 0 5px var(--blades-black-dark),
      0 0 2px var(--blades-white-bright),
      0 0 2px var(--blades-white-bright),
      0 0 2px var(--blades-white-bright),
      0 0 2px var(--blades-white-bright),
      0 0 2px var(--blades-white-bright);
  }


}

.comp.controls-container {

  --menu-size: 20px;

  --control-color: var(--blades-grey);
  --control-bg-color: var(--blades-grey-dark);
  --control-hover-color: var(--blades-gold);
  --control-hover-bg-color: var(--blades-grey-dark);

  display: flex;
  justify-content: flex-end;
  height: 100%;
  width: 100%;
  position: absolute;
  top: 0px;
  left: unset;
  right: -10px;

  .controls-panel {
    width: var(--menu-size);
    height: var(--menu-size);
    display: flex;
    align-items: center;
    justify-content: center;
    position: absolute;
    border-radius: calc(0.5 * var(--menu-size));
    background-color: var(--blades-black);
    // transform: translate(28px, -50%);
    outline: 1px solid white;
    box-shadow: 0px calc(0.2 * var(--menu-size)) calc(0.6 * var(--menu-size))
      calc(-0.25 * var(--menu-size)) rgba(0, 0, 0, 1);
    transition: 650ms cubic-bezier(0.79, 0, 0.22, 1);

    .controls-toggle {
      width: calc(0.85 * var(--menu-size));
      height: calc(0.85 * var(--menu-size));
      translate: -50% -50%;
      top: 50%;
      left: 50%;
      display: flex;
      align-items: center;
      justify-content: center;
      flex-direction: column;
      position: absolute;
      border-radius: 50%;
      cursor: pointer;
      z-index: 100;
      background-color: var(--blades-grey);
      transition: 300ms cubic-bezier(0.79, 0, 0.22, 1);
      pointer-events: auto !important;

      &:hover {
        background-color: var(--blades-grey-bright);
      }

      i {
        width: calc(0.35 * var(--menu-size));
        height: calc(1 / 25 * var(--menu-size));
        position: absolute;
        display: flex;
        border-radius: calc(50% * var(--menu-size));
        background-color: var(--blades-white);
        transition: width 200ms cubic-bezier(0.6, 0, 0.45, 0.99),
          transform 300ms cubic-bezier(0.6, 0, 0.45, 0.99),
          top 300ms cubic-bezier(0.6, 0, 0.45, 0.99) 300ms,
          bottom 300ms cubic-bezier(0.6, 0, 0.45, 0.99) 300ms;

        &:first-of-type {
          top: calc(0.33 * var(--menu-size));
        }
        &:last-of-type {
          bottom: calc(0.33 * var(--menu-size));
        }
      }
    }

    .controls-list {
      flex-direction: row;
      margin: 0;
      right: calc(0.125 * var(--menu-size));
      display: flex;
      align-items: center;
      justify-content: center;
      visibility: hidden;
      position: absolute;

      li {
        width: calc(0.75 * var(--menu-size));
        height: calc(0.75 * var(--menu-size));
        margin-left: calc(0.125 * var(--menu-size));
        list-style: none;
        border-radius: calc(0.5 * var(--menu-size));
        background-color: var(--control-bg-color);
        scale: 0;
        position: relative;
        transition: 150ms cubic-bezier(0.37, 0.01, 0.43, 1.3);
        transition-delay: 150ms;

        @for $i from 1 through 6 {
          &:not(:hover):nth-child(#{$i}) {
            transition-delay: $i * 25ms;
          }
        }

        > a {
          position: static;
          width: calc(0.75 * var(--menu-size));
          height: calc(0.75 * var(--menu-size));
          display: block;
          border-radius: 50%;
          z-index: 1;
          color: var(--control-color);
          background: var(--control-bg-color);
          pointer-events: auto !important;

          &.control-hidden {
            --control-color: var(--blades-grey);
            --control-bg-color: var(--blades-black);
            --control-hover-color: var(--blades-grey-bright);
            --control-hover-bg-color: var(--blades-grey);
          }

          &::before {
            content: '';
            position: absolute;
            top: 0;
            left: 0;
            width: 100%;
            height: 100%;
            border-radius: 50%;
            background: var(--control-hover-color);
            transition: .5s;
            transform: scale(.9);
            z-index: -5;
          }
          &:hover {
            color: var(--control-hover-color);
            box-shadow: 0 0 5px var(--control-hover-color);
            text-shadow: 0 0 5px var(--control-hover-color);
            &::before {
              transform: scale(1.1);
              box-shadow: 0 0 15px var(--control-hover-color);
            }
          }

          > i {
            position: absolute;
            translate: -50% -50%;
            top: 50%;
            left: 50%;
            font-size: calc(0.4 * var(--menu-size));
          }
        }
      }
    }

    &.active {
      width: calc(6 * (1.04 * var(--menu-size)));

      .controls-toggle {
        left: calc(0.5 * var(--menu-size));

        i {
          width: calc(0.2 * var(--menu-size));
          transition: width 200ms cubic-bezier(0.6, 0, 0.45, 0.99),
            transform 500ms cubic-bezier(0.6, 0, 0.45, 0.99) 150ms,
            top 100ms cubic-bezier(0.6, 0, 0.45, 0.99) 100ms,
            bottom 100ms cubic-bezier(0.6, 0, 0.45, 0.99) 100ms;

          &:first-of-type {
            top: calc(0.33 * var(--menu-size));
            transform: rotate(45deg);
          }

          &:last-of-type {
            bottom: calc(0.33 * var(--menu-size));
            transform: rotate(-45deg);
          }
        }
      }

      .controls-list {
        visibility: visible;

        li {
          scale: 1;
          transition-property: scale, background, color;

          @for $i from 1 through 6 {
            &:nth-child(#{$i}) {
              transition-delay: (7 - $i) * 25ms + 50ms, 0ms, 0ms;
            }
          }

          &:hover {
            background: var(--control-hover-bg-color);
            > a > i {
              color: var(--control-hover-color);
            }
          }
        }
      }
    }
  }
}

// .consequence-container.flex-vertical.full-width {
//   --container-height: 40px;
//   height: calc(var(--container-height) * 0.75);
//   max-height: calc(var(--container-height) * 0.75);
//   justify-content: flex-start;
// }
.comp.consequence-display-container {
  --container-height: 40px;
  --container-left-shift: 40px;

  --csq-icon-bg-color: var(--blades-black-dark);
  --csq-type-bg: var(--csq-icon-dark);

  --csq-button-size-mult: 0.33;

  @keyframes icon-glow {
    0% {
      filter: brightness(1) blur(1px) drop-shadow(0px 0px 0px rgb(115, 255, 213));
    }
    10% {
      filter: brightness(1.25) blur(0px) drop-shadow(0px 0px 12px rgb(115, 255, 213));
    }
    100% {
      filter: brightness(1) blur(1px) drop-shadow(0px 0px 0px rgb(115, 255, 213));
    }
  }

  &.dead-roll, .dead-roll * {
    animation: none;
    pointer-events: none;
  }

  position: relative;
  display: block;
  height: var(--container-height);
  max-height: var(--container-height);
  min-height: var(--container-height);

  &.consequence-accepted, &.consequence-accepted * {
    --container-left-shift: 0px;
    --csq-type-color: var(--blades-red) !important;
    --csq-icon-bright: var(--blades-red) !important;
    animation: none !important;
    pointer-events: none !important;
    outline: none !important;
    text-shadow: var(--text-shadow-dark) !important;
  }


  .base-consequence {
    --csq-icon-dark: var(--blades-black);
    --csq-icon-med: var(--blades-grey);
    --csq-icon-bright: var(--blades-white);
    --csq-type-color: var(--blades-grey);
    --csq-name-color: var(--blades-white);
  }

  .accept-consequence {
    --csq-icon-dark: var(--blades-red-dark);
    --csq-icon-med: var(--blades-red);
    --csq-icon-bright: var(--blades-red-bright);
    --csq-type-color: var(--blades-black-dark);
    --csq-name-color: var(--blades-red);
  }

  .accept-consequence {
    opacity: 0;
  }

  .resist-consequence {
    opacity: 0;
    --csq-icon-dark: var(--blades-gold-dark);
    --csq-icon-med: var(--blades-gold);
    --csq-icon-bright: var(--blades-gold-bright);
    --csq-type-color: var(--blades-gold-dark);
    --csq-name-color: var(--blades-gold-bright);
  }

  .special-armor-consequence {
    opacity: 0;
    --csq-icon-dark: var(--blades-blue-dark);
    --csq-icon-med: var(--blades-blue);
    --csq-icon-bright: var(--blades-blue-bright);
    --csq-type-color: var(--blades-blue-dark);
    --csq-name-color: var(--blades-blue-bright);
  }

  .consequence-bg-image {
    // background: rgba(0, 255, 255, 0.25);
    position: absolute;
    height: 500%;
    top: 80%;
    transform: translate(-100%, -50%);
    transform-origin: 0% 50%;
    width: calc(200px * 4.041);
    min-width: calc(200px * 4.041);
    z-index: -1;
    left: -10px;
  }

  .consequence-interaction-pad {
    display: none;
    display: block;
    position: absolute;
    z-index: 2;
    pointer-events: auto;
    height: 100%;
    top: 0;
    // outline: 1px dotted cyan;

    &.accept-consequence-pad {
      --pad-left-shift: calc(var(--container-left-shift) + (var(--container-height)));
      left: var(--pad-left-shift);
      width: calc(100% - var(--pad-left-shift));
    }

    &.resist-consequence-pad, &.special-armor-consequence-pad {
      left: 0;
      width: calc(var(--container-left-shift) - (var(--container-height) * 0));
    }

    &.special-armor-consequence-pad {
      height: 40%;
      z-index: 3;
    }
  }

  .consequence-icon-container {
    position: relative;

    height: var(--container-height); // calc(var(--container-height) * 0.75);
    max-width: var(--container-height); // calc(var(--container-height) * 0.75);
    background: transparent;
    left: var(--container-left-shift);
    z-index: 1;
    pointer-events: auto;
    transition: 0.2s;

    &:hover {
      filter: brightness(2);
    }

    .consequence-icon-circle {
      position: absolute;
      // transform: translate(-50%, -50%);
      // translate: -50% -50%;
      transform-origin: 100% 0%;
      // top: calc(var(--container-height) * 0.5);
      // left: calc(var(--container-height) * 0.5);
      border-radius: 50%;
      height: var(--container-height);
      width: var(--container-height);
      outline: 1px solid var(--csq-icon-med);
      background: var(--csq-icon-bg-color);
      // display: flex;
      // justify-content: center;
      // align-items: center;
      z-index: 1;
      top: 0px;
      left: 0px;
      overflow: hidden;

      svg {
        position: absolute;
        transform: translate(-50%, -50%);
        top: 50%;
        left: 50%;
        height: 80%;
        width: 80%;
        display: block;
        // margin: auto auto;

        .fill-dark { fill: var(--csq-icon-dark) }
        .fill-med { fill: var(--csq-icon-med) }
        .fill-bright { fill: var(--csq-icon-bright) }
        .fill-radial { fill: var(--csq-icon-med) }
        .fill-linear { fill: var(--csq-icon-med) }

        path { transform-origin: 50% 50% }
      }

      &.base-consequence {
        transform: scale(0.75);
        animation: icon-glow 2s ease infinite;
        pointer-events: auto;

        img {
          animation: icon-glow 2s ease infinite;
        }

        &:hover {
          filter: brightness(2) !important;
          animation: none;
        }
      }

      &.resist-consequence, &.special-armor-consequence {
        outline-width: 2px;
      }

      .consequence-icon {
        height: 100%;
      }
    }

    .consequence-button-container {
      position: absolute;
      height: calc(var(--container-height) * var(--csq-button-size-mult));
      display: flex;
      flex-direction: row;
      flex-wrap: nowrap;
      bottom: 0px;

      .consequence-button-bg {
        position: absolute;
        z-index: -1;
        height: 100%;
        width: calc(100% + 24px);
        transform-origin: 0% 50%;
        top: 0px;
        background: var(--csq-icon-bright);
        display: block;

        &.consequence-resist-button-bg,
        &.consequence-special-armor-button-bg {
          transform-origin: 100% 50%;
        }

        &.consequence-special-armor-button-bg {
          width: calc(100% + 32px)
        }
      }

      .consequence-button-label {
        position: relative;
        z-index: 1;
        font-family: var(--font-emphasis-narrow);
        font-size: 10px;
        line-height: 14px;
        color: var(--blades-grey);
        font-weight: 800;
        text-shadow:
          // 0px 0px 1px var(--blades-black-dark),
          // 0px 0px 0.5px var(--blades-black-dark),
          0px 0px 1px var(--blades-black-dark);
        letter-spacing: 1;
        // color: var(--blades-black-dark);
        text-transform: uppercase;
        // text-indent: 3px;
        white-space: nowrap;
      }
      .button-icon {
        position: unset;
        height: 14px;
        width: 14px;

        i {
          // translate: 0px 0.5px;
          height: 100%;
          width: 100%;
          font-size: calc(var(--container-height) * var(--csq-button-size-mult) * 0.8);
          line-height: calc(var(--container-height) * var(--csq-button-size-mult) * 0.95);
          margin: 0;
        }
      }

      &.consequence-resist-button-container {
        right: 100%;

        .consequence-button-bg {
          left: -7px;
          transform: skewX(45deg);
        }
      }
      &.consequence-accept-button-container {
        left: 105%;

        .consequence-button-bg {
          right: -7px;
          transform: skewX(-45deg);
        }
      }
      &.consequence-special-armor-button-container {
        right: 100%;
        bottom: 12px;
      }
    }
  }

  .consequence-type-container {
    position: absolute;
    height: calc(var(--container-height) * 0.33);
    transform-origin: 0% 50%;
    left: calc(var(--container-height) + var(--container-left-shift) - 10px);
    top: -2px;
    padding: 0 5px 0 15px;

    .consequence-type-bg {
      position: absolute;
      top: 0;
      left: -20px;
      height: 100%;
      width: 170px;
      transform-origin: 0% 50%;
      transform: skewX(-45deg);
      background: var(--csq-icon-dark);
    }

    .consequence-type {
      position: absolute;
      top: 0;
      // left: calc(var(--container-height) + var(--container-left-shift) - 75px);
      transform-origin: 0% 50%;
      white-space: nowrap;
      font-family: var(--font-emphasis-narrow);
      text-transform: uppercase;
      text-align: right;
      font-size: 10px;
      color: var(--csq-type-color);
      font-weight: normal;
    }
  }

  .consequence-name-container {
    position: absolute;
    height: calc(var(--container-height) * 0.5);
    transform-origin: 0% 50%;
    translate: 0% -50%;
    top: 50%;
    left: calc(var(--container-height) + var(--container-left-shift) - 30px);
    width: calc(100% - var(--container-height) - 20px);

    .consequence-name {
      position: absolute;
      z-index: 1;
      padding: 0 5px 0 35px;
      font-size: 14px;
      line-height: 17px;
      font-family: var(--font-emphasis), serif;
      font-variant: small-caps;
      transform-origin: 0% 50%;
      // text-shadow: var(--text-shadow-dark);
      color: var(--csq-icon-bright);
      font-style: italic;
      white-space: nowrap;

      &.resist-consequence {
        // color: var(--blades-black-dark);
        text-shadow: none;
      }
    }
  }

  .consequence-footer-container {
    position: absolute;
    height: calc(var(--container-height) * var(--csq-button-size-mult));
    width: auto;
    bottom: 0;
    top: unset;
    left: calc(var(--container-height) + var(--container-left-shift) - 20px);

    .consequence-footer-bg {
      position: absolute;
      z-index: -1;
      height: 100%;
      width: 100%;
      top: 0px;
      background: var(--csq-icon-bright);
      display: block;
      transform: skewX(45deg);
      transform-origin: 0% 50%;

      &.resist-consequence {
        width: 120px;
      }

      &.special-armor-consequence {
        width: 250px;
      }
    }

    .consequence-footer-message {
      position: absolute;
      white-space: nowrap;
      font-family: var(--font-emphasis-narrow);
      font-weight: bold;
      color: var(--blades-black-dark);
      font-size: 10px;
      line-height: 14px;
      padding-left: 25px;
      justify-content: flex-start;
      transform-origin: 0% 50%;
      gap: 5px;
    }
    .dotline {
      --dotline-dot-size: 10px;
      top: 0px;
      .dot {
        display: block;
        height: var(--dotline-dot-size);
        width: var(--dotline-dot-size);
        border-radius: calc(0.5 * var(--dotline-dot-size));
        background: var(--blades-black-dark);
        margin-right: 1px;
      }
      margin-right: 10px;
    }
  }


  .roll-consequence-row {
    .button-icon {
      position: unset;
    }
    .roll-consequence-entry-row {
      .consequence-type-icon {
        width: 24px;
        min-width: 24px;
        filter: brightness(1.5) drop-shadow(0 0 4px black);
      }
      .roll-consequence-type-select {
        font-family: var(--font-emphasis-narrow);
        flex-basis: 150px;

      }
      .roll-consequence-attribute-select {
        font-family: var(--font-emphasis-narrow);
        flex-basis: 95px;
      }
      .consequence-name {
        background: rgba(0,0,0,0.5);
        flex-basis: 375px;
      }
    }
    .consequence-resist-options-container {
      width: 75%;
      margin-left: 25%;
      justify-content: stretch;

      .consequence-resist-option {
        width: 100%;
        max-height: 14px;
        justify-content: stretch;

        .resist-select-button {
          font-size: 10px;
        }

        .roll-consequence-type-select,
        .consequence-name {
          font-size: 10px;
          line-height: 10px;
          max-height: 14px;
          font-family: var(--font-emphasis-narrow);
        }

        .consequence-name {
          flex-grow: 1;
          background: rgba(0, 0, 0, 0.5);
        }
      }
    }
  }


}