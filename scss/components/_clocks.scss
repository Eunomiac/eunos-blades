.clock {

	svg, svg defs {
		* { transform-origin: 50% 50% }

		.segmented {
			--rotation-step-size: calc(360deg / var(--rotation-steps));
			--segment-scale: 1;
		}
		clipPath.segmented { --segment-scale: 2 }

		@each $clockSize in (1, 2, 3, 4, 5, 6, 8, 10, 12) {
			.segmented[data-size="#{$clockSize}"] { --rotation-steps: #{$clockSize} }
		}

		.segmented > use {
			transform: scale(var(--segment-scale)) rotate(var(--segment-rotation));

			@for $i from 1 through 12 {
				&:nth-child(#{$i}) { --segment-rotation: calc(#{$i - 1} * var(--rotation-step-size)) }
			}
		}
	}

	height: var(--clock-glow-size);
	width: var(--clock-glow-size);
	transform: translate(-50%, -50%);
	position: absolute;
	z-index: 2;

	.clock-frame {
		height: var(--clock-frame-size);
		width: var(--clock-frame-size);
		transform: translate(-50%, -50%) translate(calc(var(--clock-glow-size) / 2), calc(var(--clock-glow-size) / 2));
		fill: transparent;
		stroke: var(--blades-black);
		stroke-width: 10px;
		z-index: 2;
		pointer-events: auto;
		overflow: visible;

		g {
			transform: scale(0.99);
			transform-origin: 50% 50%;
		}
	}

	.clock-interior {
		position: absolute;
		height: 400px;
		width: 400px;
		transform: translate(-50%, -50%) translate(calc(50% + var(--clock-glow-correction)), calc(50% + var(--clock-glow-correction)));
		svg {
			height: var(--clock-frame-size);
			width: var(--clock-frame-size);
			transform: translate(-50%, -50%);
			top: 50%;
			left: 50%;

			circle {
				height: var(--clock-frame-size);
				width: var(--clock-frame-size);
				// transform: translate(-50%, -50%);
				// top: 50%;
				// left: 50%;
			}
		}
		.clock-interior-img {
			height: var(--clock-frame-size);
			width: var(--clock-frame-size);
			transform: translate(-50%, -50%);
			top: 50%;
			left: 50%;
		}
	}

	&.clock-active {
		.clock-glow {
			position: absolute;
			z-index: 0;
			top: var(--clock-glow-correction);
			left: var(--clock-glow-correction);
			height: 400px;
			width: 400px;
			background: url("../assets/animations/clock-flare.webp") 50%/contain no-repeat border-box border-box;
			background-position-y: 5px;
		}
	}

	@each $clockSize in (1, 2, 3, 4, 5, 6, 8, 10, 12) {
		.segmented[data-size="#{$clockSize}"] { --rotation-steps: #{$clockSize} }
	}
}