{"version":3,"sources":["../../ts/documents/items/blades-location.ts"],"names":[],"mappings":"AAAA,OAAO,UAAU,MAAM,sBAAsB,CAAC;AAC9C,OAAU,EAAU,eAAe,EAAiE,MAAM,EAAgB,MAAM,yBAAyB,CAAC;AAC1J,OAAO,CAAC,MAAM,yBAAyB,CAAC;AACxC,OAAO,WAAW,MAAM,uBAAuB,CAAC;AAGhD,wBAAwB;AACxB,MAAM,cAAe,SAAQ,UAAU;IAEvC,wBAAwB;IACtB,IAAa,WAAW;QAC1B,wBAAwB;QACpB,MAAM,UAAU,GAAwD,EAAE,CAAC;QAC3E;YACE,MAAM,CAAC,IAAI;YACX,MAAM,CAAC,OAAO;YACd,MAAM,CAAC,KAAK;SACb,CAAC,OAAO,CAAC,CAAC,MAAM,EAAE,CAAC,EAAE,EAAE;YACtB,MAAM,WAAW,GAAG,IAAI,CAAC,cAAc,CAAC,MAAM,CAAC,CAAC;YAChD,UAAU,CAAC,MAAM,CAAC,GAAG;gBACnB,IAAI,EAAE,MAAM;gBACZ,KAAK,EAAE,WAAW;gBAClB,GAAG,EAAE,WAAW;gBAChB,OAAO,EAAE,WAAW;gBACpB,OAAO,EAAE,MAAM,KAAK,MAAM,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,CAAC,WAAW,CAAC,WAAW,CAAC,CAAC,CAAC,CAAC,GAAG,WAAW,EAAE;gBAC/E,QAAQ,EAAE,CAAC,KAAK,CAAC;gBACjB,SAAS,EAAE,CAAC,KAAK,CAAC;gBAClB,UAAU,EAAE,KAAK;gBACjB,YAAY,EAAE,IAAI;gBAClB,UAAU,EAAE,cAAc,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,cAAc,CAAC,CAAC,CAAC,EAAE,EAAE;aAC1D,CAAC;QACJ,CAAC,CAAC,CAAC;QACH,OAAO,UAAU,CAAC;IACpB,CAAC;IACH,wBAAwB;IACb,cAAc,CAAC,MAAc;QACpC,QAAQ,MAAM,EAAE;YACd,KAAK,MAAM,CAAC,IAAI,CAAC,CAAC,OAAO,IAAI,CAAC,MAAM,CAAC,IAAI,CAAC,KAAK,CAAC;YAChD,KAAK,MAAM,CAAC,OAAO,CAAC,CAAC,OAAO,IAAI,CAAC,cAAc,CAAC,MAAM,CAAC,IAAI,CAAC,CAAC;YAC7D,KAAK,MAAM,CAAC,KAAK,CAAC,CAAC,OAAO,IAAI,CAAC,MAAM,CAAC,KAAK,CAAC;YAC5C,aAAa;SACd;QACD,OAAO,CAAC,CAAC;IACX,CAAC;IACH,wBAAwB;IACtB,IAAa,UAAU,KAAK,OAAO,IAAI,CAAC,GAAG,IAAI,EAAE,CAAA,CAAC,CAAC;IACrD,wBAAwB;IACtB,+BAA+B;IACtB,KAAK,CAAC,SAAS,CAAC,OAAY,EAAE,OAAY,EAAE,MAAc;QACjE,MAAM,KAAK,CAAC,SAAS,CAAC,OAAO,EAAE,OAAO,EAAE,MAAM,CAAC,CAAC;QAChD,WAAW,CAAC,eAAe,CAAC,eAAe,CAAC,EAAE,CAAC,CAAC,OAAO,CAAC,CAAC,KAAK,EAAE,EAAE,CAAC,KAAK,CAAC,MAAM,EAAE,CAAC,CAAC;IACrF,CAAC;CAEF;AAMD,wBAAwB;AACxB,eAAe,cAAc,CAAC","file":"blades-location.js","sourcesContent":["import BladesItem from \"../../blades-item.js\";\r\nimport C, {SVGDATA, BladesActorType, BladesItemType, Tag, BladesPhase, RollModCategory, PrereqType, Factor, RollModStatus} from \"../../core/constants.js\";\r\nimport U from \"../../core/utilities.js\";\r\nimport BladesActor from \"../../blades-actor.js\";\r\nimport BladesRollCollab from \"../../blades-roll-collab.js\";\r\nimport type {ItemDataConstructorData} from \"@league-of-foundry-developers/foundry-vtt-types/src/foundry/common/data/data.mjs/itemData.js\";\r\n\r\nclass BladesLocation extends BladesItem implements BladesItemSubClass.Location,\r\n                                                    BladesRollCollab.OppositionDocData {\r\n\r\n\r\n  override get rollFactors(): Partial<Record<Factor,BladesRollCollab.FactorData>> {\r\n\r\n    const factorData: Partial<Record<Factor,BladesRollCollab.FactorData>> = {};\r\n    [\r\n      Factor.tier,\r\n      Factor.quality,\r\n      Factor.scale\r\n    ].forEach((factor, i) => {\r\n      const factorTotal = this.getFactorTotal(factor);\r\n      factorData[factor] = {\r\n        name: factor,\r\n        value: factorTotal,\r\n        max: factorTotal,\r\n        baseVal: factorTotal,\r\n        display: factor === Factor.tier ? U.romanizeNum(factorTotal) : `${factorTotal}`,\r\n        isActive: i === 0,\r\n        isPrimary: i === 0,\r\n        isDominant: false,\r\n        highFavorsPC: true,\r\n        cssClasses: `factor-gold${i === 0 ? \" factor-main\" : \"\"}`\r\n      };\r\n    });\r\n    return factorData;\r\n  }\r\n\r\n  override getFactorTotal(factor: Factor): number {\r\n    switch (factor) {\r\n      case Factor.tier: return this.system.tier.value;\r\n      case Factor.quality: return this.getFactorTotal(Factor.tier);\r\n      case Factor.scale: return this.system.scale;\r\n      // no default\r\n    }\r\n    return 0;\r\n  }\r\n\r\n  override get rollOppImg() { return this.img ?? \"\" }\r\n\r\n  // #region OVERRIDES: _onUpdate\r\n  override async _onUpdate(changed: any, options: any, userId: string) {\r\n    await super._onUpdate(changed, options, userId);\r\n    BladesActor.GetTypeWithTags(BladesActorType.pc).forEach((actor) => actor.render());\r\n  }\r\n  // #endregion\r\n}\r\n\r\ndeclare interface BladesLocation {\r\n  type: BladesItemType.location,\r\n  system: BladesItemSchema.Location\r\n}\r\n\r\nexport default BladesLocation;"]}