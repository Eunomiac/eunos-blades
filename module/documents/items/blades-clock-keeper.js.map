{"version":3,"sources":["../../ts/documents/items/blades-clock-keeper.ts"],"names":[],"mappings":"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","file":"blades-clock-keeper.js","sourcesContent":["import BladesItem from \"../../blades-item.js\";\r\nimport C, {SVGDATA, BladesActorType, BladesItemType, Tag, BladesPhase, RollModCategory, PrereqType, Factor, RollModStatus} from \"../../core/constants.js\";\r\nimport U from \"../../core/utilities.js\";\r\nimport BladesActor from \"../../blades-actor.js\";\r\nimport BladesRollCollab from \"../../blades-roll-collab.js\";\r\nimport type {ItemDataConstructorData} from \"@league-of-foundry-developers/foundry-vtt-types/src/foundry/common/data/data.mjs/itemData.js\";\r\n\r\nclass BladesClockKeeper extends BladesItem implements BladesItemSubClass.Clock_Keeper {\r\n\r\n  // #region CLOCKS OVERLAY\r\n  _overlayElement?: HTMLElement;\r\n  get overlayElement() {\r\n    this._overlayElement ??= $(\"#clocks-overlay\")[0];\r\n    if (!this._overlayElement) {\r\n      $(\"body.vtt.game.system-eunos-blades\").append(\"<section id=\\\"clocks-overlay\\\"></section>\");\r\n      [this._overlayElement] = $(\"#clocks-overlay\");\r\n    }\r\n    return this._overlayElement;\r\n  }\r\n\r\n  async renderOverlay() {\r\n    if (!game.scenes?.current) { return }\r\n    if (!game.eunoblades.ClockKeeper) { return }\r\n    if (!game.eunoblades.ClockKeeper.overlayElement) {\r\n      eLog.error(\"clocksOverlay\", \"[ClocksOverlay] Cannot locate overlay element.\");\r\n      return;\r\n    }\r\n    game.eunoblades.ClockKeeper.overlayElement.innerHTML = (await getTemplate(\"systems/eunos-blades/templates/overlays/clock-overlay.hbs\"))({\r\n      ...game.eunoblades.ClockKeeper.system,\r\n      currentScene: game.scenes?.current.id,\r\n      clockSizes: C.ClockSizes,\r\n      svgData: SVGDATA\r\n    });\r\n    game.eunoblades.ClockKeeper.activateOverlayListeners();\r\n  }\r\n  async activateOverlayListeners() {\r\n    if (!game?.user?.isGM) { return }\r\n    $(\"#clocks-overlay\").find(\".clock-frame\").on(\"wheel\", async (event) => {\r\n      if (!event.currentTarget) { return }\r\n      if (!BladesItem.IsType(game.eunoblades.ClockKeeper, BladesItemType.clock_keeper)) { return }\r\n      if (!(event.originalEvent instanceof WheelEvent)) { return }\r\n\r\n      event.preventDefault();\r\n\r\n      const clock$ = $(event.currentTarget).closest(\".clock\");\r\n      const [key] = clock$.closest(\".clock-key\");\r\n\r\n      if (!(key instanceof HTMLElement)) { return }\r\n\r\n      const keyID = key.id;\r\n      const clockNum = clock$.data(\"index\");\r\n      const curClockVal = U.pInt(clock$.data(\"value\"));\r\n      const delta = event.originalEvent.deltaY < 0 ? 1 : -1;\r\n      const max = U.pInt(clock$.data(\"size\"));\r\n\r\n      const newClockVal = U.gsap.utils.clamp(0, max, curClockVal + delta);\r\n\r\n      if (curClockVal === newClockVal) { return }\r\n\r\n      await game.eunoblades.ClockKeeper.update({\r\n        [`system.clock_keys.${keyID}.clocks.${clockNum}.value`]: `${newClockVal}`\r\n      });\r\n      // socketlib.system.executeForEveryone(\"renderOverlay\");\r\n    });\r\n\r\n    // .on({\r\n    //   mouseenter: function() {\r\n    //     $(this).parent().css(\"z-index\", 1);\r\n    //     $(this).data(\"hoverTimeline\").play();\r\n    //   },\r\n    //   mouseleave: function() {\r\n    //     $(this).data(\"hoverTimeline\").reverse().then(() => {\r\n    //       $(this).parent().removeAttr(\"style\");\r\n    //     });\r\n    //   }\r\n    $(\"#clocks-overlay\").find(\".key-label\").on({\r\n      click: async (event) => {\r\n        if (!event.currentTarget) { return }\r\n        if (!BladesItem.IsType(game.eunoblades.ClockKeeper, BladesItemType.clock_keeper)) { return }\r\n\r\n        event.preventDefault();\r\n\r\n        const keyID = $(event.currentTarget).data(\"keyId\") as string;\r\n        eLog.checkLog3(\"clocksOverlay\", \"Updating Key isActive\", {\r\n          current: game.eunoblades.ClockKeeper.system.clock_keys[keyID]?.isActive,\r\n          update: !(game.eunoblades.ClockKeeper.system.clock_keys[keyID]?.isActive)\r\n        });\r\n        await game.eunoblades.ClockKeeper.update({[`system.clock_keys.${keyID}.isActive`]: !(game.eunoblades.ClockKeeper.system.clock_keys[keyID]?.isActive)});\r\n        // socketlib.system.executeForEveryone(\"renderOverlay\");\r\n      },\r\n      contextmenu: () => {\r\n        if (!game.user.isGM) { return }\r\n        game.eunoblades.ClockKeeper?.sheet?.render(true);\r\n      }\r\n    });\r\n  }\r\n\r\n  async addClockKey(): Promise<BladesItemOfType<BladesItemType.clock_keeper>|undefined> {\r\n    if (!BladesItem.IsType(game.eunoblades.ClockKeeper, BladesItemType.clock_keeper)) { return undefined }\r\n    const keyID = randomID();\r\n    return game.eunoblades.ClockKeeper.update({[`system.clock_keys.${keyID}`]: {\r\n      id: keyID,\r\n      display: \"\",\r\n      isVisible: false,\r\n      isNameVisible: true,\r\n      isActive: true,\r\n      scene: game.eunoblades.ClockKeeper.system.targetScene,\r\n      numClocks: 1,\r\n      clocks: {\r\n        1: {\r\n          display: \"\",\r\n          isVisible: false,\r\n          isNameVisible: false,\r\n          isActive: false,\r\n          color: \"yellow\",\r\n          max: 4,\r\n          value: 0\r\n        }\r\n      }\r\n    }});\r\n  }\r\n\r\n  async deleteClockKey(keyID: string): Promise<BladesItemOfType<BladesItemType.clock_keeper>|undefined> {\r\n    if (!BladesItem.IsType(game.eunoblades.ClockKeeper, BladesItemType.clock_keeper)) { return undefined }\r\n    return game.eunoblades.ClockKeeper.update({[`system.clock_keys.-=${keyID}`]: null});\r\n  }\r\n\r\n  async setKeySize(keyID: string, keySize = 1): Promise<BladesItemOfType<BladesItemType.clock_keeper>|undefined> {\r\n    if (!BladesItem.IsType(game.eunoblades.ClockKeeper, BladesItemType.clock_keeper)) { return undefined }\r\n    keySize = parseInt(`${keySize}`);\r\n    const updateData: Record<string, any> = {\r\n      [`system.clock_keys.${keyID}.numClocks`]: keySize\r\n    };\r\n    const clockKey = game.eunoblades.ClockKeeper.system.clock_keys[keyID];\r\n    if (!clockKey) { return game.eunoblades.ClockKeeper }\r\n    const currentSize = Object.values(clockKey.clocks).length;\r\n    if (currentSize < keySize) {\r\n      for (let i = (currentSize + 1); i <= keySize; i++) {\r\n        updateData[`system.clock_keys.${keyID}.clocks.${i}`] = {\r\n          display: \"\",\r\n          value: 0,\r\n          max: 4,\r\n          color: \"yellow\",\r\n          isVisible: false,\r\n          isNameVisible: true,\r\n          isActive: false\r\n        };\r\n      }\r\n    } else if (currentSize > keySize) {\r\n      for (let i = (keySize + 1); i <= currentSize; i++) {\r\n        updateData[`system.clock_keys.${keyID}.clocks.-=${i}`] = null;\r\n      }\r\n    }\r\n    eLog.checkLog(\"clock_key\", \"Clock Key Update Data\", {clockKey, updateData});\r\n    return game.eunoblades.ClockKeeper.update(updateData);\r\n    // return socketlib.system.executeForEveryone(\"renderOverlay\");\r\n  }\r\n  // #endregion\r\n\r\n  // #region OVERRIDES: prepareDerivedData, _onUpdate\r\n  override prepareDerivedData() {\r\n    super.prepareDerivedData();\r\n\r\n    this.system.scenes = game.scenes.map((scene) => ({id: scene.id, name: scene.name ?? \"\"}));\r\n    this.system.targetScene ??= game.scenes.current?.id || null;\r\n    this.system.clock_keys = Object.fromEntries(Object.entries(this.system.clock_keys ?? {})\r\n      .filter(([_, keyData]) => keyData && keyData.id)\r\n      .map(([keyID, keyData]) => {\r\n        if (keyData === null) { return [keyID, null] }\r\n        keyData.clocks = Object.fromEntries(Object.entries(keyData.clocks ?? {})\r\n          .filter(([_, clockData]) => Boolean(clockData)));\r\n        return [keyID, keyData];\r\n      }));\r\n  }\r\n\r\n  override async _onUpdate(changed: any, options: any, userId: string) {\r\n    await super._onUpdate(changed, options, userId);\r\n    BladesActor.GetTypeWithTags(BladesActorType.pc).forEach((actor) => actor.render());\r\n    socketlib.system.executeForEveryone(\"renderOverlay\");\r\n  }\r\n  // #endregion\r\n\r\n}\r\n\r\ndeclare interface BladesClockKeeper {\r\n  type: BladesItemType.clock_keeper,\r\n  system: BladesItemSchema.Clock_Keeper\r\n}\r\n\r\nexport default BladesClockKeeper;"]}