{"version":3,"sources":["../../ts/documents/blades-actor-proxy.ts"],"names":[],"mappings":"AAAA,OAAO,CAAC,MAAM,sBAAsB,CAAC;AACrC,OAAO,EAAC,eAAe,EAAC,MAAM,sBAAsB,CAAC;AAErD,OAAO,WAAW,MAAM,oBAAoB,CAAC;AAC7C,OAAO,QAAQ,MAAM,uBAAuB,CAAC;AAC7C,OAAO,SAAS,MAAM,wBAAwB,CAAC;AAC/C,OAAO,aAAa,MAAM,4BAA4B,CAAC;AACvD,OAAO,UAAU,MAAM,yBAAyB,CAAC;AACjD,wBAAwB;AACxB,MAAM,SAAS,GAAwD;IACrE,CAAC,eAAe,CAAC,EAAE,CAAC,EAAE,QAAQ;IAC9B,CAAC,eAAe,CAAC,GAAG,CAAC,EAAE,SAAS;IAChC,CAAC,eAAe,CAAC,OAAO,CAAC,EAAE,aAAa;IACxC,CAAC,eAAe,CAAC,IAAI,CAAC,EAAE,UAAU;IACpC,wBAAwB;CACvB,CAAC;AACF,wBAAwB;AACxB,gEAAgE;AAChE,MAAM,gBAAgB,GAAG,IAAI,KAAK,CAAC,cAAY,CAAC,EAAE;IAClD,wBAAwB;IACtB,SAAS,EAAE,UAAS,MAAM,EAAE,IAAW;QACrC,MAAM,CAAC,IAAI,CAAC,GAAG,IAAI,CAAC;QACxB,wBAAwB;QACpB,IAAI,CAAC,SAAS,CAAC,IAAI,CAAC,IAAuB,CAAC,EAAE;YAC5C,OAAO,IAAI,WAAW,CAAC,GAAG,IAAkC,CAAC,CAAC;SAC/D;QACL,wBAAwB;QACpB,OAAO,IAAI,SAAS,CAAC,IAAI,CAAC,IAAuB,CAAE,CAAC,GAAG,IAAkC,CAAC,CAAC;IAC7F,CAAC;IACH,wBAAwB;IACtB,GAAG,EAAE,UAAS,MAAM,EAAE,IAAI;QACxB,QAAQ,IAAI,EAAE;YACZ,KAAK,QAAQ,CAAC;YACd,KAAK,iBAAiB;gBACpB,OAAO,UACL,IAC0E,EAC1E,OAAO,GAAG,EAAE;oBAEZ,IAAI,CAAC,CAAC,OAAO,CAAC,IAAI,CAAC,EAAE;wBACnB,OAAO,IAAI,CAAC,GAAG,CAAC,CAAC,CAAC,EAAE,EAAE,CAAC,MAAM,CAAC,KAAK,CAAC,aAAa,CAAC,MAAM,CAAC,CAAC,EAAE,OAAO,CAAC,CAAC,CAAC;qBACvE;oBACX,wBAAwB;oBACd,IAAI,CAAC,SAAS,CAAC,IAAI,CAAC,IAAuB,CAAC,EAAE;wBAC5C,OAAO,WAAW,CAAC,MAAM,CAAC,IAAI,EAAE,OAAO,CAAC,CAAC;qBAC1C;oBACX,wBAAwB;oBACd,OAAO,SAAS,CAAC,IAAI,CAAC,IAAuB,CAAE,CAAC,MAAM,CAAC,IAAI,EAAE,OAAO,CAAC,CAAC;gBACxE,CAAC,CAAC;YACJ,KAAK,MAAM,CAAC,WAAW;gBACrB,OAAO,UAAS,QAAiB;oBAC/B,OAAO,MAAM,CAAC,MAAM,CAAC,SAAS,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC,EAAE,EAAE,CAAC,QAAQ,YAAY,CAAC,CAAC,CAAC;gBACrE,CAAC,CAAC;YACJ;gBACE,OAAO,WAAW,CAAC,IAAiC,CAAC,CAAC;SACzD;IACH,CAAC;IACH,wBAAwB;CACvB,CAAC,CAAC;AACH,wBAAwB;AACxB,eAAe,gBAAgB,CAAC;AAChC,OAAO,EAAC,WAAW,EAAE,QAAQ,EAAE,UAAU,EAAE,SAAS,EAAE,aAAa,EAAC,CAAC","file":"blades-actor-proxy.js","sourcesContent":["import U from \"../core/utilities.js\";\r\nimport {BladesActorType} from \"../core/constants.js\";\r\nimport type {ActorDataConstructorData} from \"@league-of-foundry-developers/foundry-vtt-types/src/foundry/common/data/data.mjs/actorData.js\";\r\nimport BladesActor from \"../blades-actor.js\";\r\nimport BladesPC from \"./actors/blades-pc.js\";\r\nimport BladesNPC from \"./actors/blades-npc.js\";\r\nimport BladesFaction from \"./actors/blades-faction.js\";\r\nimport BladesCrew from \"./actors/blades-crew.js\";\r\n\r\nconst ActorsMap: Partial<Record<BladesActorType,typeof BladesActor>> = {\r\n  [BladesActorType.pc]: BladesPC,\r\n  [BladesActorType.npc]: BladesNPC,\r\n  [BladesActorType.faction]: BladesFaction,\r\n  [BladesActorType.crew]: BladesCrew\r\n\r\n};\r\n\r\n// eslint-disable-next-line @typescript-eslint/no-empty-function\r\nconst BladesActorProxy = new Proxy(function() {}, {\r\n\r\n  construct: function(target, args: any[]) {\r\n    const [data] = args;\r\n\r\n    if (!ActorsMap[data.type as BladesActorType]) {\r\n      return new BladesActor(...args as [ActorDataConstructorData]);\r\n    }\r\n\r\n    return new ActorsMap[data.type as BladesActorType]!(...args as [ActorDataConstructorData]);\r\n  },\r\n\r\n  get: function(target, prop) {\r\n    switch (prop) {\r\n      case \"create\":\r\n      case \"createDocuments\":\r\n        return function(\r\n          data: ActorDataConstructorData & { system?: Partial<BladesActorSystem> }\r\n          |Array<ActorDataConstructorData & { system?: Partial<BladesActorSystem> }>,\r\n          options = {}\r\n        ) {\r\n          if (U.isArray(data)) {\r\n            return data.map((i) => CONFIG.Actor.documentClass.create(i, options));\r\n          }\r\n\r\n          if (!ActorsMap[data.type as BladesActorType]) {\r\n            return BladesActor.create(data, options);\r\n          }\r\n\r\n          return ActorsMap[data.type as BladesActorType]!.create(data, options);\r\n        };\r\n      case Symbol.hasInstance:\r\n        return function(instance: unknown) {\r\n          return Object.values(ActorsMap).some((i) => instance instanceof i);\r\n        };\r\n      default:\r\n        return BladesActor[prop as KeyOf<typeof BladesActor>];\r\n    }\r\n  }\r\n\r\n});\r\n\r\nexport default BladesActorProxy;\r\nexport {BladesActor, BladesPC, BladesCrew, BladesNPC, BladesFaction};"]}