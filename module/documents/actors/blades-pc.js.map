{"version":3,"sources":["../../ts/documents/actors/blades-pc.ts"],"names":[],"mappings":"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","file":"blades-pc.js","sourcesContent":["import BladesItem from \"../../blades-item.js\";\r\nimport C, {SVGDATA, Playbook, Attribute, Action, Harm, BladesActorType, BladesItemType, Tag, BladesPhase, RollModCategory, PrereqType, Factor, RollModStatus} from \"../../core/constants.js\";\r\nimport U from \"../../core/utilities.js\";\r\nimport BladesActor from \"../../blades-actor.js\";\r\nimport BladesCrew from \"./blades-crew.js\";\r\nimport BladesRollCollab from \"../../blades-roll-collab.js\";\r\nimport type {ItemDataConstructorData} from \"@league-of-foundry-developers/foundry-vtt-types/src/foundry/common/data/data.mjs/itemData.js\";\r\nimport type {ActorData, ActorDataConstructorData} from \"@league-of-foundry-developers/foundry-vtt-types/src/foundry/common/data/data.mjs/actorData.js\";\r\n\r\n// import MIX, {PlayableCharacterMixin} from \"../../core/mixins.js\";\r\n\r\nclass BladesPC extends BladesActor implements BladesActorSubClass.Scoundrel {\r\n\r\n  // #region Static Overrides: Create ~\r\n  static override async create(data: ActorDataConstructorData & { system?: Partial<BladesActorSchema.Scoundrel> }, options = {}) {\r\n    data.token = data.token || {};\r\n    data.system = data.system ?? {};\r\n\r\n    eLog.checkLog2(\"actor\", \"BladesPC.create(data,options)\", {data, options});\r\n\r\n    //~ Set the Token to sync with charsheet.\r\n    data.token.actorLink = true;\r\n\r\n    //~ Initialize generic experience clues.\r\n    data.system.experience = {\r\n      playbook: {value: 0, max: 8},\r\n      insight: {value: 0, max: 6},\r\n      prowess: {value: 0, max: 6},\r\n      resolve: {value: 0, max: 6},\r\n      clues: [],\r\n      ...data.system.experience ?? {}\r\n    };\r\n    return super.create(data, options);\r\n  }\r\n  // #endregion\r\n\r\n  // #region BladesPrimaryActor Implementation ~\r\n  get primaryUser(): User | null {\r\n    return game.users?.find((user) => user.character?.id === this?.id) || null;\r\n  }\r\n  async clearLoadout() {\r\n    this.update({\"system.loadout.selected\": \"\"});\r\n    this.updateEmbeddedDocuments(\r\n      \"Item\",\r\n      [\r\n        ...this.activeSubItems.filter((item) => BladesItem.IsType(item, BladesItemType.gear) && !item.hasTag(Tag.System.Archived))\r\n          .map((item) => ({\r\n            \"_id\": item.id,\r\n            \"system.tags\": [... item.tags, Tag.System.Archived],\r\n            \"system.uses_per_score.value\": 0\r\n          })),\r\n        ...this.activeSubItems.filter((item) => BladesItem.IsType(item, BladesItemType.ability) && item.system.uses_per_score.max)\r\n          .map((item) => ({\r\n            \"_id\": item.id,\r\n            \"system.uses_per_score.value\": 0\r\n          }))\r\n      ]\r\n    );\r\n  }\r\n  // #endregion\r\n\r\n  override getSubActor(actorRef: ActorRef): BladesActor | undefined {\r\n    const actor = super.getSubActor(actorRef);\r\n    if (!actor) { return undefined }\r\n    if (this.primaryUser?.id) {\r\n      actor.ownership[this.primaryUser.id] = CONST.DOCUMENT_PERMISSION_LEVELS.OWNER;\r\n    }\r\n    return actor;\r\n  }\r\n\r\n  get armorStatus() {\r\n    const armorData: Partial<ValueMax & {special?: boolean}> = {};\r\n    if (this.system.armor.active.special) {\r\n      armorData.special = this.system.armor.checked.special;\r\n    }\r\n    if (this.system.armor.active.heavy) {\r\n      armorData.max = 2;\r\n      if (this.system.armor.checked.light) {\r\n        armorData.value = 0;\r\n      } else if (this.system.armor.checked.heavy) {\r\n        armorData.value = 1;\r\n      } else {\r\n        armorData.value = 2;\r\n      }\r\n    } else if (this.system.armor.active.light) {\r\n      armorData.max = 1;\r\n      if (this.system.armor.checked.light) {\r\n        armorData.value = 0;\r\n      } else {\r\n        armorData.value = 1;\r\n      }\r\n    } else {\r\n      armorData.max = 0;\r\n      armorData.value = 0;\r\n    }\r\n    return armorData as ValueMax & {special?: boolean};\r\n  }\r\n\r\n  // #region BladesScoundrel Implementation ~\r\n\r\n  isMember(crew: BladesCrew) { return this.crew?.id === crew.id }\r\n\r\n  get vice(): BladesItem | undefined {\r\n    if (this.type !== BladesActorType.pc) { return undefined }\r\n    return this.activeSubItems.find((item) => item.type === BladesItemType.vice);\r\n  }\r\n\r\n  get crew(): BladesCrew | undefined {\r\n    return this.activeSubActors.find((subActor): subActor is BladesCrew => BladesActor.IsType(subActor, BladesActorType.crew));\r\n  }\r\n\r\n  get abilities(): BladesItem[] {\r\n    if (!this.playbook) { return [] }\r\n    return this.activeSubItems.filter((item) => [BladesItemType.ability, BladesItemType.crew_ability].includes(item.type));\r\n  }\r\n\r\n  get playbookName() {\r\n    return this.playbook?.name as (BladesTag & Playbook) | undefined;\r\n  }\r\n  get playbook(): BladesItemOfType<BladesItemType.playbook>|undefined {\r\n    return this.activeSubItems.find((item): item is BladesItemOfType<BladesItemType.playbook> => item.type === BladesItemType.playbook);\r\n  }\r\n\r\n  get attributes(): Record<Attribute, number> {\r\n    if (!BladesActor.IsType(this, BladesActorType.pc)) { return undefined as never }\r\n    return {\r\n      insight: Object.values(this.system.attributes.insight).filter(({value}) => value > 0).length + this.system.resistance_bonus.insight,\r\n      prowess: Object.values(this.system.attributes.prowess).filter(({value}) => value > 0).length + this.system.resistance_bonus.prowess,\r\n      resolve: Object.values(this.system.attributes.resolve).filter(({value}) => value > 0).length + this.system.resistance_bonus.resolve\r\n    };\r\n  }\r\n  get actions(): Record<Action, number> {\r\n    if (!BladesActor.IsType(this, BladesActorType.pc)) { return undefined as never }\r\n    return U.objMap({\r\n      ...this.system.attributes.insight,\r\n      ...this.system.attributes.prowess,\r\n      ...this.system.attributes.resolve\r\n    }, ({value, max}: ValueMax) => U.gsap.utils.clamp(0, max, value)) as Record<Action, number>;\r\n  }\r\n  get rollable(): Record<Attribute | Action, number> {\r\n    if (!BladesActor.IsType(this, BladesActorType.pc)) { return undefined as never }\r\n    return {\r\n      ...this.attributes,\r\n      ...this.actions\r\n    };\r\n  }\r\n  get trauma(): number {\r\n    if (!BladesActor.IsType(this, BladesActorType.pc)) { return 0 }\r\n    return Object.keys(this.system.trauma.checked)\r\n      .filter((traumaName) => {\r\n        // @ts-ignore Compiler linter mismatch.\r\n        return this.system.trauma.active[traumaName] && this.system.trauma.checked[traumaName];\r\n      })\r\n      .length;\r\n  }\r\n  get traumaList(): string[] {\r\n    // @ts-ignore Compiler linter mismatch.\r\n    return BladesActor.IsType(this, BladesActorType.pc) ? Object.keys(this.system.trauma.active).filter((key) => this.system.trauma.active[key]) : [];\r\n  }\r\n  get activeTraumaConditions(): Record<string, boolean> {\r\n    if (!BladesActor.IsType(this, BladesActorType.pc)) { return {} }\r\n    return U.objFilter(\r\n      this.system.trauma.checked,\r\n      // @ts-ignore Compiler linter mismatch.\r\n      (v: unknown, traumaName: string): boolean => Boolean(traumaName in this.system.trauma.active && this.system.trauma.active[traumaName])\r\n    ) as Record<string, boolean>;\r\n  }\r\n  get currentLoad(): number {\r\n    if (!BladesActor.IsType(this, BladesActorType.pc)) { return 0 }\r\n    const activeLoadItems = this.activeSubItems.filter((item) => item.type === BladesItemType.gear);\r\n    return U.gsap.utils.clamp(0, 10, activeLoadItems.reduce((tot, i) => tot + U.pInt(i.system.load), 0));\r\n  }\r\n  get remainingLoad(): number {\r\n    if (!BladesActor.IsType(this, BladesActorType.pc)) { return 0 }\r\n    if (!this.system.loadout.selected) { return 0 }\r\n    const maxLoad = this.system.loadout.levels[game.i18n.localize(this.system.loadout.selected.toString()).toLowerCase() as KeyOf<typeof this.system.loadout.levels>];\r\n    return Math.max(0, maxLoad - this.currentLoad);\r\n  }\r\n\r\n  async addStash(amount: number): Promise<void> {\r\n    if (!BladesActor.IsType(this, BladesActorType.pc)) { return undefined }\r\n    return this.update({\"system.stash.value\": Math.min(this.system.stash.value + amount, this.system.stash.max)});\r\n  }\r\n  // #endregion\r\n\r\n  // #region BladesRollCollab Implementation\r\n  override get rollModsData(): BladesRollCollab.RollModData[] {\r\n    const rollModsData = super.rollModsData;\r\n\r\n    // Add roll mods from harm\r\n    if (BladesActor.IsType(this, BladesActorType.pc)) {\r\n      [[/1d/, RollModCategory.roll] as const, [/Less Effect/, RollModCategory.effect] as const].forEach(([effectPat, effectCat]) => {\r\n        const {one: harmConditionOne, two: harmConditionTwo} = Object.values(this.system.harm)\r\n          .find((harmData) => effectPat.test(harmData.effect)) ?? {};\r\n        const harmString = U.objCompact([harmConditionOne, harmConditionTwo === \"\" ? null : harmConditionTwo]).join(\" & \");\r\n        if (harmString.length > 0) {\r\n          rollModsData.push({\r\n            id: `Harm-negative-${effectCat}`,\r\n            name: harmString,\r\n            category: effectCat,\r\n            posNeg: \"negative\",\r\n            base_status: RollModStatus.ToggledOn,\r\n            modType: \"harm\",\r\n            value: 1,\r\n            tooltip: [\r\n              `<h1 class='sur-title'>${effectCat === RollModCategory.roll ? Harm.Impaired : Harm.Weakened} (Harm)</h1>`,\r\n              `<h1 class='red-bright'>${harmString}</h1>`,\r\n              effectCat === RollModCategory.roll\r\n                ? \"<p>If your injuries apply to the situation at hand, you suffer <strong class='red-bright'>−1d</strong> to your roll.</p>\"\r\n                : \"<p>If your injuries apply to the situation at hand, you suffer <strong class='red-bright'>−1 effect</strong>.\"\r\n            ].join(\"\")\r\n          });\r\n        }\r\n      });\r\n      const {one: harmCondition} = Object.values(this.system.harm!).find((harmData) => /Need Help/.test(harmData.effect)) ?? {};\r\n      if (harmCondition && harmCondition.trim() !== \"\") {\r\n        rollModsData.push({\r\n          id: \"Push-negative-roll\",\r\n          name: \"PUSH\",\r\n          sideString: harmCondition.trim(),\r\n          category: RollModCategory.roll,\r\n          posNeg: \"negative\",\r\n          base_status: RollModStatus.ToggledOn,\r\n          modType: \"harm\",\r\n          value: 0,\r\n          effectKeys: [\"Cost-Stress2\"],\r\n          tooltip: [\r\n            \"<h1 class='sur-title'>Broken (Harm)</h1>\",\r\n            `<h1 class='red-bright'>${harmCondition.trim()}</h1>`,\r\n            \"<p>If your injuries apply to the situation at hand, you must <strong>Push</strong> to act.</p>\"\r\n          ].join(\"\")\r\n        });\r\n      }\r\n    }\r\n\r\n    return rollModsData;\r\n  }\r\n\r\n  get rollTraitPCTooltipActions(): string {\r\n    const tooltipStrings: string[] = [\"<table><tbody>\"];\r\n    const actionRatings = this.actions;\r\n    Object.values(Attribute).forEach((attribute) => {\r\n      C.Action[attribute].forEach((action) => {\r\n        tooltipStrings.push([\r\n          \"<tr>\",\r\n          `<td><strong>${U.uCase(action)}</strong></td>`,\r\n          `<td>${\"⚪\".repeat(actionRatings[action])}</td>`,\r\n          `<td><em style=\"font-family: 'Minion Pro Cond'; font-size: 10px;\">(${C.ShortActionTooltips[action]})</em></td>`,\r\n          \"</tr>\"\r\n        ].join(\"\"));\r\n      });\r\n    });\r\n    tooltipStrings.push(\"</tbody></table>\");\r\n    return tooltipStrings.join(\"\");\r\n  }\r\n\r\n  get rollTraitPCTooltipAttributes(): string {\r\n    const tooltipStrings: string[] = [\"<table><tbody>\"];\r\n    const attributeRatings = this.attributes;\r\n    Object.values(Attribute).forEach((attribute) => {\r\n      tooltipStrings.push([\r\n        \"<tr>\",\r\n        `<td><strong>${U.uCase(attribute)}</strong></td>`,\r\n        `<td>${\"⚪\".repeat(attributeRatings[attribute])}</td>`,\r\n        `<td><em>(${C.ShortAttributeTooltips[attribute]})</em></td>`,\r\n        \"</tr>\"\r\n      ].join(\"\"));\r\n    });\r\n    tooltipStrings.push(\"</tbody></table>\");\r\n    return tooltipStrings.join(\"\");\r\n  }\r\n  // #endregion\r\n}\r\n\r\ndeclare interface BladesPC {\r\n  type: BladesActorType.pc,\r\n  system: BladesActorSchema.Scoundrel\r\n}\r\n\r\nexport default BladesPC;"]}