{"version":3,"sources":["../../ts/blades-push-notifications.ts"],"names":[],"mappings":"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","file":"blades-push-notifications.js","sourcesContent":["import U from \"./core/utilities.js\";\r\n\r\nexport default class BladesPushController {\r\n\r\n  static Get() { return game.eunoblades.PushController! }\r\n  static Initialize() {\r\n    game.eunoblades ??= {};\r\n    Hooks.once(\"ready\", async () => {\r\n      let pushController: BladesPushController|undefined = game.eunoblades.PushController;\r\n      if (!(pushController instanceof BladesPushController)) {\r\n        pushController = new BladesPushController();\r\n      }\r\n      game.eunoblades.PushController = pushController;\r\n      pushController.initOverlay();\r\n    });\r\n    Hooks.on(\"canvasReady\", async () => { game.eunoblades.PushController?.initOverlay() });\r\n  }\r\n\r\n  static InitSockets() {\r\n    if (game.eunoblades.PushController) {\r\n      socketlib.system.register(\"pushNotice\", game.eunoblades.PushController.push);\r\n      return true;\r\n    }\r\n    return false;\r\n  }\r\n\r\n  initOverlay() {\r\n    $(\"#sidebar\").append($(\"<div id='blades-push-notifications'></div>\"));\r\n  }\r\n\r\n  get elem$() { return $(\"#blades-push-notifications\") }\r\n  get elem() { return this.elem$[0] }\r\n\r\n  activeNotifications: Record<string, JQuery<HTMLElement>> = {};\r\n\r\n  push(blockClass: string, charName: string, titleText?: string, bodyText?: string) {\r\n    const pushController = BladesPushController.Get();\r\n    const pushID = randomID();\r\n    const pushLines: string[] = [\r\n      `<div id=\"#blades-push-${pushID}\" class=\"push-notice${charName === \"GM\" ? \" gm-notice\" : \"\"} ${blockClass}\">`\r\n    ];\r\n    if (charName !== \"GM\") {\r\n      pushLines.push(`    <div class=\"author\">${charName}</div>`);\r\n    }\r\n    if (titleText) {\r\n      pushLines.push(`    <div class=\"header\">${titleText}</div>`);\r\n    }\r\n    if (bodyText) {\r\n      pushLines.push(`    <div class=\"body${titleText ? \"\" : \" no-border\"}\">${bodyText}</div>`);\r\n    }\r\n    pushLines.push(\"</div>\");\r\n    const pushElem$ = $(pushLines.join(\"\\n\"));\r\n\r\n    pushController.elem$.append(pushElem$);\r\n    pushElem$.on(\"click\", () => pushController.removePush(pushElem$[0]));\r\n    U.gsap.from(\r\n      pushElem$[0],\r\n      {\r\n        x: \"-=200\",\r\n        scale: 1.25,\r\n        duration: 1,\r\n        ease: \"power2\"\r\n      }\r\n    );\r\n    U.gsap.from(\r\n      pushElem$[0],\r\n      {\r\n        background: \"rgb(255, 231, 92)\",\r\n        borderColor: \"rgb(255, 255, 255)\",\r\n        duration: 10,\r\n        ease: \"power2\"\r\n      }\r\n    );\r\n  }\r\n\r\n  removePush(pushElem: HTMLElement) {\r\n    U.gsap.effects.slideUp(pushElem)\r\n      .then(() => $(pushElem).remove());\r\n  }\r\n\r\n  pushToAll(...args: [string, string, string|undefined]) {\r\n    socketlib.system.executeForEveryone(\"pushNotice\", \"\", ...args);\r\n  }\r\n\r\n  pushToSome(...args: [string, string, string|undefined, User[]]) {\r\n    const users = (args.pop() as User[]).map((user) => user.id!);\r\n    const pushArgs = args.slice(0, 3) as [string, string, string|undefined];\r\n    socketlib.system.executeForUsers(\"pushNotice\", users, \"\", ...args);\r\n  }\r\n\r\n  pushToGM(...args: [string, string, string|undefined]) {\r\n    socketlib.system.executeForAllGMs(\"pushNotice\", \"to-gm-notice\", ...args);\r\n  }\r\n\r\n}"]}