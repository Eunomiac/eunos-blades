{"version":3,"sources":["sheets/blades-clock-keeper-sheet.js"],"names":[],"mappings":";;;;;;;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"blades-clock-keeper-sheet.js","sourcesContent":["import BladesItemSheet from \"./blades-item-sheet.js\";\nimport BladesItem from \"../blades-item.js\";\r\n\nexport default class BladesClockKeeperSheet extends BladesItemSheet {\n    \n    static get defaultOptions() {\n        return foundry.utils.mergeObject(super.defaultOptions, {\n            classes: [\"eunos-blades\", \"sheet\", \"item\", \"clock-keeper\"],\n            template: \"systems/eunos-blades/templates/items/clock_keeper-sheet.hbs\",\n            width: 700,\n            height: 970\n        });\n    }\n    \n    static async Initialize() {\n        game.eunoblades ??= {};\n        Items.registerSheet(\"blades\", BladesClockKeeperSheet, { types: [\"clock_keeper\"], makeDefault: true });\n        Hooks.once(\"ready\", async () => {\n            let clockKeeper = game.items.find((item) => item.type === \"clock_keeper\");\n            if (!(clockKeeper instanceof BladesItem)) {\n                clockKeeper = (await BladesItem.create({\n                    name: \"Clock Keeper\",\n                    type: \"clock_keeper\",\n                    img: \"systems/eunos-blades/assets/icons/clock-keeper.svg\"\n                }));\n            }\n            game.eunoblades.ClockKeeper = clockKeeper;\n            game.eunoblades.ClockKeeper.renderOverlay();\n        });\n        Hooks.on(\"canvasReady\", async () => { game.eunoblades.ClockKeeper?.renderOverlay(); });\n        return loadTemplates([\n            \"systems/eunos-blades/templates/items/clock_keeper-sheet.hbs\",\n            \"systems/eunos-blades/templates/parts/clock-sheet-row.hbs\"\n        ]);\n    }\n    \n    async _updateObject(event, formData) {\n        const updateData = await this.object.update(formData);\n        socketlib.system.executeForEveryone(\"renderOverlay\");\r\n        return updateData;\n    }\n    \n    async getData() {\n        const context = super.getData();\n        \n        context.clock_keys = Object.fromEntries(Object.entries(context.clock_keys)\n            .filter(([keyID, keyData]) => Boolean(keyData && keyData.scene === context.system.targetScene)));\n        return context;\n    }\n    \n    addKey(event) {\n        event.preventDefault();\n        this.item.addClockKey();\n    }\n    \n    deleteKey(event) {\n        event.preventDefault();\n        const keyID = event.currentTarget.dataset.id;\n        if (keyID) {\n            this.item.deleteClockKey(keyID);\n        }\n    }\n    \n    setKeySize(event) {\n        event.preventDefault();\n        const keyID = event.target.dataset.id;\n        if (keyID) {\n            this.item.setKeySize(keyID, parseInt(event.target.value));\n        }\n    }\n    \n    async activateListeners(html) {\n        super.activateListeners(html);\n        \r\n        html.find(\"[data-action=\\\"add-key\\\"\").on(\"click\", this.addKey.bind(this));\r\n        html.find(\"[data-action=\\\"delete-key\\\"\").on(\"click\", this.deleteKey.bind(this));\r\n        html.find(\".clock-counter\").on(\"change\", this.setKeySize.bind(this));\n    }\n}"]}