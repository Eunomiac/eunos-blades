{"version":3,"sources":["../../ts/sheets/actor/blades-faction-sheet.ts"],"names":[],"mappings":"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","file":"blades-faction-sheet.js","sourcesContent":["\r\nimport BladesActor from \"../../blades-actor.js\";\r\nimport BladesPC from \"../../documents/actors/blades-pc.js\";\r\nimport BladesNPC from \"../../documents/actors/blades-npc.js\";\r\nimport BladesFaction from \"../../documents/actors/blades-faction.js\";\r\nimport BladesCrew from \"../../documents/actors/blades-crew.js\";\r\nimport BladesSheet from \"./blades-sheet.js\";\r\nimport {BladesActorType} from \"../../core/constants.js\";\r\n\r\nclass BladesFactionSheet extends BladesSheet {\r\n\r\n  static override get defaultOptions() {\r\n    return foundry.utils.mergeObject(super.defaultOptions, {\r\n      classes: [\"eunos-blades\", \"sheet\", \"actor\", \"faction\"],\r\n      template: \"systems/eunos-blades/templates/faction-sheet.hbs\",\r\n      width: 900,\r\n      height: \"auto\",\r\n      tabs: [{navSelector: \".nav-tabs\", contentSelector: \".tab-content\", initial: \"overview\"}]\r\n    }) as ActorSheet.Options;\r\n  }\r\n\r\n  override getData() {\r\n    const context = super.getData() as ReturnType<BladesSheet[\"getData\"]>;\r\n    if (!BladesActor.IsType(this.actor, BladesActorType.faction)) { return context }\r\n    const sheetData: Partial<BladesActorSchema.Faction> & BladesActorDataOfType<BladesActorType.faction> = {\r\n      clocks: Object.fromEntries(Object.entries(this.actor.system.clocks).map(([clockNum, clockData], i) => [\r\n        clockNum,\r\n        {\r\n          display: clockData?.display ?? \"\",\r\n          value: clockData?.value ?? 0,\r\n          max: clockData?.max ?? 0,\r\n          isVisible: true,\r\n          isNameVisible: false,\r\n          isActive: false,\r\n          color: \"white\",\r\n          target: `system.clocks.${i+1}.value`,\r\n          gm_notes: clockData?.gm_notes ?? \"\"\r\n        }\r\n      ])) as Record<number, BladesClockData>,\r\n      tierData: {\r\n        \"class\": \"comp-tier comp-vertical comp-teeth\",\r\n        \"label\": \"Tier\",\r\n        \"labelClass\": \"filled-label full-width\",\r\n        \"dotline\": {\r\n          data: this.actor.system.tier,\r\n          target: \"system.tier.value\",\r\n          svgKey: \"teeth.tall\",\r\n          svgFull: \"full|half|frame\",\r\n          svgEmpty: \"full|half|frame\"\r\n        }\r\n      }\r\n    };\r\n\r\n    return {\r\n      ...context,\r\n      ...sheetData\r\n    };\r\n  }\r\n\r\n  override activateListeners(html: JQuery<HTMLElement>) {\r\n    super.activateListeners(html);\r\n\r\n    // Everything below here is only needed if the sheet is editable\r\n    if (!this.options.editable) {return}\r\n\r\n    // Update Inventory Item\r\n    html.find(\".item-body\").on(\"click\", (event) => {\r\n      const element = $(event.currentTarget).parents(\".item\");\r\n      const item = this.actor.items.get(element.data(\"itemId\"));\r\n      item?.sheet?.render(true);\r\n    });\r\n\r\n  }\r\n}\r\n\r\nexport default BladesFactionSheet;"]}