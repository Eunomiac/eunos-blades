{"version":3,"sources":["sheets/blades-tracker-sheet.js"],"names":[],"mappingsfile":"blades-tracker-sheet.js","sourcesContent":["import BladesItemSheet from \"./blades-item-sheet.js\";\nimport BladesItem from \"../blades-item.js\";\r\n\nexport var BladesPhase;\n(function (BladesPhase) {\n    BladesPhase[\"CharGen\"] = \"CharGen\";\n    BladesPhase[\"Freeplay\"] = \"Freeplay\";\n    BladesPhase[\"Score\"] = \"Score\";\n    BladesPhase[\"Downtime\"] = \"Downtime\";\n})(BladesPhase || (BladesPhase = {}));\r\n\nexport var BladesTipContext;\n(function (BladesTipContext) {\n    BladesTipContext[\"DiceRoll\"] = \"DiceRoll\";\n    BladesTipContext[\"Combat\"] = \"Combat\";\n    BladesTipContext[\"General\"] = \"General\";\n})(BladesTipContext || (BladesTipContext = {}));\nclass BladesTipGenerator {\n    \n    static get Tips() {\n        return {\n            [BladesTipContext.DiceRoll]: [],\n            [BladesTipContext.Combat]: [\n                \"Every combat encounter should advance the main plot, or else it's filler.\",\n                \"Inject dialogue into combat encounters, especially from important adversaries.\",\n                \"Combat encounters should be a challenge, but not a slog. Don't be afraid to end them early.\",\n                \"Infiltrate/Rescue/Destroy: Use these as additional/secondary goals in combat encounters.\",\n                \"Tell the next player in the initiative order that they're on deck.\",\n                \"Don't trigger combats automatically: Use alternate objectives to incite the players to fight, giving them agency.\",\n                \"Add another layer by drawing focus to collateral effects of the combat: a fire, a hostage, a collapsing building, innocents in danger\"\n            ],\n            [BladesTipContext.General]: [\n                \"Rolling the dice always means SOMETHING happens.\",\n                \"Jump straight to the action; don't waste time on establishing scenes or filler.\",\n                \"Invoke elements of characters' backstories or beliefs to make any scene more personal.\"\n                \n            ]\n        };\n    }\n    \n    tipContext;\n    constructor(tipContext) {\n        this.tipContext = tipContext;\n    }\n}\r\nclass BladesTrackerSheet extends BladesItemSheet {\n    \n    static async Get() {\n        return game.eunoblades.Tracker || (await BladesItem.create({\n            name: \"GM Tracker\",\n            type: \"gm_tracker\",\n            img: \"systems/eunos-blades/assets/icons/gm-tracker.svg\"\n        }));\n    }\n    \n    static get defaultOptions() {\n        return foundry.utils.mergeObject(super.defaultOptions, {\n            classes: [\"eunos-blades\", \"sheet\", \"item\", \"gm-tracker\"],\n            template: \"systems/eunos-blades/templates/items/gm_tracker-sheet.hbs\",\n            width: 700,\n            height: 970\n        });\n    }\n    \n    static async Initialize() {\n        game.eunoblades ??= {};\n        Items.registerSheet(\"blades\", BladesTrackerSheet, { types: [\"gm_tracker\"], makeDefault: true });\n        Hooks.once(\"ready\", async () => {\n            let tracker = game.items.find((item) => item.type === \"gm_tracker\");\n            if (!(tracker instanceof BladesItem)) {\n                tracker = (await BladesItem.create({\n                    name: \"GM Tracker\",\n                    type: \"gm_tracker\",\n                    img: \"systems/eunos-blades/assets/icons/gm-tracker.svg\"\n                }));\n            }\n            game.eunoblades.Tracker = tracker;\n        });\n        return loadTemplates([\n            \"systems/eunos-blades/templates/items/gm_tracker-sheet.hbs\"\n        ]);\n    }\n    \n    get phase() { return this.item.system.game_phase; }\n    set phase(phase) { this.item.update({ system: { game_phase: phase } }); }\n    \n    get actionMax() { return this.phase === BladesPhase.CharGen ? 2 : undefined; }\n    \n    async getData() {\n        const context = await super.getData();\n        \n        context.system.phases = Object.values(BladesPhase);\n        \n        return context;\n    }\n    \n    async activateListeners(html) {\n        super.activateListeners(html);\n        \n    }\n}\r\n\nexport default BladesTrackerSheet;"]}